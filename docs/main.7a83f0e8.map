{"version":3,"sources":["node_modules\\matter-js\\build\\matter.js","node_modules\\three\\build\\three.module.js","src\\game.ts","src\\jsx.tsx","src\\ui.tsx","src\\index.ts","src\\main.tsx"],"names":["CanvasRenderer","EventDispatcher","undefined","Number","EPSILON","Math","pow","isInteger","value","isFinite","floor","sign","x","Function","prototype","name","defineProperty","toString","match","Object","assign","target","TypeError","output","index","arguments","length","source","nextKey","hasOwnProperty","call","type","listener","_listeners","listeners","indexOf","push","listenerArray","splice","event","array","slice","i","l","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","_Math","PI","chars","r","split","uuid","Array","rnd","random","join","min","max","n","m","a1","a2","b1","b2","y","t","low","high","range","degrees","DEG2RAD","radians","RAD2DEG","round","log","LN2","Vector2","defineProperties","scalar","Error","constructor","v","w","warn","addVectors","s","a","b","subVectors","multiplyScalar","minVal","maxVal","set","clamp","divideScalar","ceil","sqrt","abs","angle","atan2","distanceToSquared","dx","dy","normalize","alpha","v1","v2","add","offset","attribute","getX","getY","center","c","cos","sin","textureId","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","generateUUID","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","Vector4","z","WebGLRenderTarget","width","height","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","Quaternion","_x","_y","_z","_w","Vector3","Matrix4","elements","error","DataTexture","data","CubeTexture","images","copy","meta","textures","getDataURL","canvas","toDataURL","document","createElementNS","getContext","drawImage","dispatchEvent","uv","multiply","e","q","acos","m11","te","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","dispose","clone","create","isWebGLRenderTargetCube","qa","qb","qm","slerp","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","f","onChangeCallback","quaternion","euler","update","isEuler","order","c1","c2","c3","s1","s2","s3","axis","halfAngle","trace","vFrom","vTo","dot","crossVectors","conjugate","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","callback","multiplyVectors","applyQuaternion","setFromEuler","setFromAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","matrix","camera","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","applyMatrix4","ax","ay","az","bx","by","bz","vector","lengthSq","planeNormal","projectOnVector","sub","normal","theta","dz","sinPhiRadius","phi","radius","sx","setFromMatrixColumn","sy","sz","fromArray","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","me","xAxis","yAxis","zAxis","scaleX","scaleY","scaleZ","d","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","x2","y2","z2","wx","wy","wz","eye","up","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","count","setXYZ","tmp","throwOnDegenerate","t11","t12","t13","t14","det","msg","identity","detInv","scaleXSq","scaleYSq","scaleZSq","tx","ty","position","scale","makeRotationFromQuaternion","setPosition","determinant","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","h","isDataTexture","isCubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","map","arrayCacheF32","arrayCacheI32","mat4array","Float32Array","mat3array","flatten","nBlocks","blockSize","firstElem","toArray","allocTexUnits","renderer","Int32Array","allocTextureUnit","setValue1f","gl","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","g","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","size","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","getPureArraySetter","SingleUniform","id","activeInfo","setValue","PureArrayUniform","StructuredUniform","u","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","exec","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","setOptional","object","upload","values","needsUpdate","seqWithValue","ColorKeywords","Color","setRGB","isColor","setHex","setStyle","hex","hue2rgb","euclideanModulo","style","handleAlpha","string","parseFloat","color","components","parseInt","setHSL","charAt","gammaFactor","safeInverse","getHex","optionalTarget","hsl","hue","saturation","lightness","delta","getHSL","color1","color2","UniformsLib","properties","UniformsUtils","uniforms","merged","uniforms_src","uniforms_dst","parameter_src","isMatrix3","isMatrix4","isVector2","isVector3","isVector4","isTexture","isArray","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_template","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_flip","normal_fragment","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","ShaderChunk","ShaderLib","merge","aomap","lightmap","fog","emissivemap","lights","bumpmap","normalmap","displacementmap","gradientmap","roughnessmap","metalnessmap","points","Box2","Infinity","LensFlarePlugin","flares","vertexBuffer","elementBuffer","shader","attributes","tempTexture","occlusionTexture","context","state","init","vertices","faces","Uint16Array","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","RGBA","createProgram","fragmentShader","createShader","FRAGMENT_SHADER","vertexShader","VERTEX_SHADER","prefix","getPrecision","shaderSource","compileShader","attachShader","linkProgram","getAttribLocation","render","scene","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPosition","screenPositionPixels","validArea","useProgram","initAttributes","enableAttribute","vertex","disableUnusedAttributes","occlusionMap","vertexAttribPointer","FLOAT","disable","CULL_FACE","buffers","depth","setMask","flare","matrixWorldInverse","containsPoint","activeTexture","TEXTURE0","TEXTURE1","copyTexImage2D","renderType","BLEND","enable","DEPTH_TEST","drawElements","TRIANGLES","UNSIGNED_SHORT","positionScreen","customUpdateCallback","updateLensFlares","j","jl","lensFlares","sprite","opacity","rotation","setBlending","blending","blendEquation","blendSrc","blendDst","resetGLState","SpritePlugin","sprites","spritePosition","spriteRotation","spriteScale","fillStyle","fillRect","painterSortStable","renderOrder","oldFogType","sceneFogType","fogColor","isFog","fogNear","fogFar","fogType","isFogExp2","fogDensity","density","modelViewMatrix","sort","material","visible","onBeforeRender","alphaTest","decompose","uvOffset","uvScale","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","premultipliedAlpha","setTest","depthTest","depthWrite","onAfterRender","physical","standard","makeEmpty","il","expandByPoint","halfSize","box","result","isEmpty","point","addScalar","clampedPoint","equals","materialId","Material","side","shading","vertexColors","transparent","depthFunc","clippingPlanes","clipIntersection","clipShadows","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","overdraw","ShaderMaterial","parameters","defines","linewidth","wireframe","wireframeLinewidth","clipping","skinning","morphTargets","morphNormals","extensions","defaultAttributeValues","index0AttributeName","setValues","MeshDepthMaterial","depthPacking","alphaMap","displacementMap","displacementScale","displacementBias","Box3","Sphere","Matrix3","Plane","constant","Frustum","p0","p1","p2","p3","p4","p5","planes","WebGLShadowMap","_renderer","_lights","_objects","capabilities","_gl","_state","_frustum","_projScreenMatrix","_lightShadows","shadows","_shadowMapSize","_maxShadowMapSize","maxTextureSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","depthMaterialTemplate","distanceShader","distanceUniforms","useMorphing","useSkinning","depthMaterial","distanceMaterial","scope","getDepthMaterial","isPointLight","lightPositionWorld","geometry","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","isBufferGeometry","morphAttributes","isGeometry","isSkinnedMesh","variantIndex","localClippingEnabled","keyA","keyB","materialsForVariant","cachedMaterial","renderSingleSided","renderReverseSided","lightPos","renderObject","shadowCamera","layers","test","isMesh","isLine","isPoints","castShadow","frustumCulled","intersectsObject","groups","k","kl","group","groupMaterial","materialIndex","renderBufferDirect","children","enabled","autoUpdate","faceCount","setClear","setScissorTest","light","shadow","mapSize","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMap","shadowMatrix","setFromMatrixPosition","makeTranslation","lookAt","updateMatrixWorld","setRenderTarget","clear","face","vpDimensions","setFromMatrix","clearColor","getClearColor","clearAlpha","getClearAlpha","setClearColor","WebGLAttributes","get","isInterleavedBufferAttribute","remove","deleteBuffer","buffer","bufferType","usage","dynamic","DYNAMIC_DRAW","onUploadCallback","Float64Array","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","INT","Int8Array","BYTE","Uint8Array","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","Euler","_order","DefaultOrder","Layers","mask","key","newValue","currentValue","isRoot","extractFromCache","cache","metadata","roughness","metalness","emissive","specular","shininess","clearCoat","clearCoatRoughness","toJSON","lightMap","bumpMap","bumpScale","normalMap","normalScale","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","reflectivity","gradientMap","sizeAttenuation","wireframeLinecap","wireframeLinejoin","srcPlanes","dstPlanes","isShaderMaterial","isMeshDepthMaterial","minX","minY","minZ","maxX","maxY","maxZ","expandByObject","traverse","node","fromBufferAttribute","closestPoint","sphere","clampPoint","plane","getCenter","getSize","setFromPoints","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","applyMatrix3","matrix4","setFromMatrix4","transpose","cross","setFromNormalAndCoplanarPoint","inverseNormalLength","negate","distanceToPoint","orthoPoint","perpendicularMagnitude","line","direction","denominator","start","startSign","endSign","end","intersectsPlane","m1","optionalNormalMatrix","referencePoint","coplanarPoint","normalMatrix","getNormalMatrix","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","boundingSphere","computeBoundingSphere","negRadius","distance","d1","d2","RotationOrders","asin","newOrder","setFromQuaternion","optionalResult","channel","object3DId","Object3D","parent","DefaultUp","onChange","onRotationChange","onQuaternionChange","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","receiveShadow","userData","Camera","OrthographicCamera","zoom","view","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","Face3","vertexNormals","premultiply","q1","rotateOnAxis","translateOnAxis","isCamera","isObject3D","getObjectByProperty","child","getWorldQuaternion","traverseVisible","traverseAncestors","compose","force","updateMatrix","isRootObject","serialize","library","element","JSON","stringify","geometries","uuids","materials","recursive","parse","fullWidth","fullHeight","cx","cy","zoomW","zoomH","scaleW","scaleH","offsetX","offsetY","makeOrthographic","focalLength","vExtentSlope","getFilmHeight","atan","tan","skew","getFilmWidth","makePerspective","GeometryIdCount","Geometry","colors","faceVertexUvs","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","BufferAttribute","itemSize","normalized","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","indices","normals","uvs","uvs2","arrayMax","BufferGeometry","drawRange","BoxGeometry","widthSegments","heightSegments","depthSegments","fromBufferGeometry","BoxBufferGeometry","mergeVertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","MeshBasicMaterial","lightMapIntensity","aoMap","aoMapIntensity","combine","refractionRatio","Ray","origin","Line3","Triangle","Mesh","drawMode","updateMorphTargets","WebGLBackground","objects","planeCamera","planeMesh","boxCamera","boxMesh","forceClear","background","autoClear","autoClearColor","autoClearDepth","autoClearStencil","cube","extractRotation","reversePainterSortStable","WebGLRenderList","opaque","opaqueLastIndex","transparentLastIndex","renderItem","finish","WebGLRenderLists","lists","hash","list","WebGLIndexedBufferRenderer","infoRender","mode","bytesPerElement","setMode","calls","renderInstances","extension","drawElementsInstancedANGLE","maxInstancedCount","WebGLBufferRenderer","drawArrays","drawArraysInstancedANGLE","WebGLGeometries","infoMemory","wireframeAttributes","onGeometryDispose","buffergeometry","removeEventListener","addEventListener","_bufferGeometry","setFromObject","geometryAttributes","getWireframeAttribute","geometryIndex","WebGLLights","WebGLObjects","updateList","frame","updateFromObject","addLineNumbers","lines","WebGLShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","computeBoundingBox","makeRotationX","applyMatrix","makeRotationY","makeRotationZ","makeScale","obj","positions","uv2","tempNormals","tempUVs","tempUVs2","addFace","computeFaceNormals","translate","cb","ab","fl","vA","vB","vC","areaWeighted","vl","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","computeVertexNormals","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mesh","verticesMap","unique","changes","faceIndicesToRemove","idx","diff","_id","materialIndexSort","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","index1","index2","vectors","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","computeGroups","MaxIndex","isBufferAttribute","applyToBufferAttribute","copyVector3sArray","copyColorsArray","copyArray","fromGeometry","direct","__directGeometry","copyVector2sArray","lineDistance","fromDirectGeometry","TypeArray","copyIndicesArray","copyVector4sArray","setFromBufferAttribute","isNaN","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","geometry2","array2","morphAttribute","isMeshBasicMaterial","ray","at","directionDistance","distanceSqToPoint","segCenter","segDir","v0","optionalPointOnRay","optionalPointOnSegment","segExtent","s0","sqrDist","extDet","a01","b0","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","transformDirection","startP","startEnd","clampToLine","startEnd2","closestPointToPointParameter","resultLengthSq","dot00","dot01","dot02","dot11","dot12","denom","invDenom","barycoordFromPoint","i0","i1","i2","triangle","setFromCoplanarPoints","edgeList","projectedPoint","minDistance","projectPoint","closestPointToPoint","ml","keys","morphTargetInfluences","morphTargetDictionary","String","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","raycaster","intersect","intersectTriangle","checkBufferGeometryIntersection","intersection","faceIndex","intersects","intersectsBox","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","addScaledVector","uvs_f","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","generateExtensions","rendererExtensions","chunks","derivatives","envMapCubeUV","flatShading","fragDepth","logarithmicDepthBuffer","drawBuffers","shaderTextureLOD","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","identifiers","ACTIVE_ATTRIBUTES","getActiveAttrib","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","gammaFactorDefine","prefixVertex","prefixFragment","customExtensions","customDefines","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","numClippingPlanes","shadowMapEnabled","numClipIntersection","physicallyCorrectLights","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","bindAttribLocation","programLog","cachedUniforms","cachedAttributes","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","deleteShader","getUniforms","getAttributes","destroy","deleteProgram","usedTimes","WebGLPrograms","programs","shaderIDs","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","isWebGLRenderTarget","getParameters","nClipPlanes","nClipIntersection","shaderID","allocateBones","skeleton","bones","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","getMaxPrecision","currentRenderTarget","getRenderTarget","vertexTextures","gammaOutput","gammaInput","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","getProgramCode","onBeforeCompile","acquireProgram","pl","programInfo","releaseProgram","pop","WebGLTextures","paramThreeToGL","_isWebGL2","WebGL2RenderingContext","clampToMaxSize","maxSize","isPowerOfTwo","textureNeedsGenerateMipmaps","filterFallback","LINEAR","onTextureDispose","deallocateTexture","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","onRenderTargetDispose","renderTarget","deallocateRenderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","__version","complete","uploadTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","textureNeedsPowerOfTwo","makePowerOfTwo","HTMLImageElement","HTMLCanvasElement","nearestPowerOfTwo","isPowerOfTwoImage","glFormat","glType","mipmap","isDepthTexture","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressedTexture","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthRenderbuffer","isCube","setupDepthTexture","webglDepthTexture","createRenderbuffer","TEXTURE_CUBE_MAP","isCompressed","cubeImage","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setTextureCubeDynamic","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","WebGLProperties","WebGLState","colorBuffer","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","maxVertexAttributes","getParameter","MAX_VERTEX_ATTRIBS","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentScissorTest","maxTextures","MAX_COMBINED_TEXTURE_IMAGE_UNITS","VERSION","lineWidthAvailable","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","SRC_COLOR","setFlipSided","frontFace","CW","CCW","setCullFace","cullFace","BACK","FRONT","FRONT_AND_BACK","setPolygonOffset","factor","POLYGON_OFFSET_FILL","webglSlot","setFunc","enableVertexAttribArray","vertexAttribDivisorANGLE","enableAttributeAndDivisor","meshPerAttribute","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","setMaterial","setLineWidth","lineWidth","getScissorTest","SCISSOR_TEST","webglType","boundTexture","apply","reset","WebGLCapabilities","maxAnisotropy","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","MAX_TEXTURE_MAX_ANISOTROPY_EXT","ArrayCamera","cameras","WebVRManager","device","frameData","window","VRFrameData","standingMatrix","standingMatrixInverse","cameraL","bounds","cameraR","cameraVR","currentSize","currentPixelRatio","onVRDisplayPresentChange","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","standing","getDevice","setDevice","getCamera","depthNear","depthFar","getFrameData","pose","orientation","stageParameters","sittingToStandingTransform","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebGLExtensions","getExtension","WebGLClipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLRenderer","_canvas","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","currentRenderList","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","_this","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentScissor","_currentScissorTest","_currentViewport","_height","_pixelRatio","_scissor","_width","_scissorTest","_viewport","_clippingEnabled","_localClippingEnabled","_vector3","_matrix4","_matrix42","_infoRender","_infoMemory","contextAttributes","onContextLost","programCache","lightCache","renderLists","vr","bufferRenderer","indexedBufferRenderer","getTargetPixelRatio","setDefaultGLState","spritePlugin","warned","lensFlarePlugin","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","absNumericalSort","renderObjects","renderList","overrideMaterial","isArrayCamera","camera2","setViewport","setScissor","isImmediateRenderObject","setProgram","renderObjectImmediate","renderBufferImmediate","initMaterial","materialProperties","_clipping","programChange","programAttributes","numSupportedMorphTargets","numSupportedMorphNormals","lightsHash","ambientLightColor","ambient","directionalLights","spotLights","rectAreaLights","pointLights","hemisphereLights","directionalShadowMap","directionalShadowMatrix","spotShadowMap","spotShadowMatrix","pointShadowMap","pointShadowMatrix","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","_currentProgram","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","nextPowerOfTwo","boneMatrices","boneTextureSize","refreshUniformsFog","isMeshNormalMaterial","refreshUniformsCommon","diffuse","emissiveIntensity","uvScaleMap","offsetRepeat","flipEnvMap","isLineBasicMaterial","isLineDashedMaterial","refreshUniformsDash","dashSize","totalSize","gapSize","isPointsMaterial","refreshUniformsPoints","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsNormal","ltcMat","LTC_MAT_TEXTURE","ltcMag","LTC_MAG_TEXTURE","refreshUniformsLine","refreshUniformsPhong","refreshUniformsStandard","envMapIntensity","setupLights","ll","intensity","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","isAmbientLight","isDirectionalLight","shadowBias","bias","shadowRadius","shadowMapSize","isSpotLight","coneCos","penumbraCos","penumbra","decay","isRectAreaLight","halfWidth","halfHeight","isHemisphereLight","skyColor","groundColor","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","getContextAttributes","forceContextLoss","loseContext","setPixelRatio","setSize","updateStyle","getDrawingBufferSize","pixelRatio","boolean","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","nx","ny","nz","uvArray","colorArray","geometryProgram","updateBuffers","activeInfluences","removeAttribute","rangeFactor","setupVertexAttributes","startIndex","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","isLineSegments","isLineLoop","LINE_LOOP","LINE_STRIP","POINTS","compile","isLight","animate","requestAnimationFrame","onFrame","projectObject","isSprite","intersectsSprite","isLensFlare","setupShadows","lightShadowsLength","opaqueObjects","transparentObjects","setFaceCulling","frontFaceDirection","textureUnit","_usedTextureUnits","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","FogExp2","Fog","Scene","LensFlare","SpriteMaterial","Sprite","LOD","Skeleton","boneInverses","calculateInverses","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","bind","normalizeSkinWeights","LineBasicMaterial","linecap","linejoin","Line","LineSegments","LineLoop","PointsMaterial","Points","Group","VideoTexture","video","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","o","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","uvBuffer","subdivideFace","cols","aj","lerp","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","appplyRadius","generateUVs","inclination","correctUVs","centroid","azi","correctSeam","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","console","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","generateSegment","P","getPointAt","N","B","generateBufferData","generateIndices","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","vecX","vecY","wantedRotation","isSpriteMaterial","intersectPoint","worldPosition","worldScale","setFromMatrixScale","guessSizeSq","levels","level","addLevel","matrixPosition","getObjectForDistance","raycast","inverse","bone","isBone","offsetMatrix","identityMatrix","gbone","pos","rotq","scl","sw","lengthManhattan","vec","skinWeight","setXYZW","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","distanceSqToSegment","nbVertices","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","ShapeUtils","contour","snip","verts","px","py","aX","aY","bX","bY","cX","cY","cCROSSap","bCROSScp","vertIndices","area","nv","holes","removeDupEndPts","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","seg2Pt","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","forEach","allPointsMap","allpoints","concat","hl","shapeWithoutHoles","removeHoles","shape","hole","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","indepHoles","intersectsHoleEdge","ihIdx","chkHole","hIdx","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","minShapeIndex","counter","h2","triangles","triangulate","pts","ExtrudeGeometry","shapes","ExtrudeBufferGeometry","addShapeList","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","curveSegments","amount","bevelThickness","bevelSize","bevelEnabled","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","addShape","shapeHole","indexOffset","extractPoints","shapeVertices","shapeHoles","isClockWise","reverse","triangulateShape","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","generateTorso","slope","indexRow","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","getArrays","positionAttribute","getAttribute","verticesArray","uvAttribute","IndexAttribute","indicesArray","sl","arrays","extrudePts","splineTube","binormal","position2","ahole","placeholder","bevelSegments","steps","extrudePath","extrudeByPath","uvgen","UVGenerator","WorldUVGenerator","getSpacedPoints","shapePoints","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","sidewalls","layeroffset","slen1","slen2","f3","nextIndex","generateTopUV","f4","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","addVertex","addUV","vector2","buildLidFaces","buildSideFaces","extrudeMaterial","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","Geometries","freeze","ShadowMaterial","RawShaderMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshPhongMaterial","MeshToonMaterial","MeshNormalMaterial","MeshLambertMaterial","LineDashedMaterial","isShadowMaterial","Materials","Cache","file","files","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","onStart","itemStart","url","itemEnd","itemError","DefaultLoadingManager","FileLoader","manager","CompressedTextureLoader","_parser","DataTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","cached","dataUriRegex","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","toLowerCase","ArrayBuffer","charCodeAt","Blob","parser","DOMParser","parseFromString","setTimeout","request","XMLHttpRequest","header","open","status","withCredentials","overrideMimeType","requestHeader","setRequestHeader","send","loader","loadTexture","load","texDatas","mipmapCount","setPath","setResponseType","loaded","isCubemap","texData","substr","crossOrigin","src","urls","setCrossOrigin","isJPEG","search","KeyframeTrackPrototype","AnimationUtils","from","to","isTypedArray","forceClone","isView","DataView","times","compareTime","nValues","srcOffset","jsonKeys","valuePropertyName","time","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrackConstructor","interpolation","convertArray","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","optimize","VectorKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","NumberKeyframeTrack","StringKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","KeyframeTrack","AnimationClip","duration","tracks","resetDuration","MaterialLoader","BufferGeometryLoader","pp","giveUpAt","forward_scan","afterEnd_","seek","linear_scan","validate_interval","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","copySampleValue_","iPrev","iNext","tPrev","tNext","getSettings_","endingStart","endingEnd","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","getValueSize","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","createInterpolant","message","ValueTypeName","timeOffset","timeScale","startTime","endTime","nKeys","arraySlice","valid","prevTime","currTime","smoothInterpolation","getInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","slerpFlat","json","trackType","_getTrackTypeForValueTypeName","flattenJSON","track","typeName","jsonTracks","frameTime","fps","clip","clipTracks","morphTargetSequence","noLoop","numMorphTargets","getKeyframeOrder","sortedArray","objectOrClipArray","clipArray","animations","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","animation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","trim","getTexture","typedArray","TYPED_ARRAYS","drawcalls","offsets","Loader","onLoadStart","onLoadProgress","onLoadComplete","JSONLoader","ObjectLoader","texturePath","Handlers","regex","handlers","createMaterial","BlendingMode","textureLoader","materialLoader","wrap","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","setTextures","extractUrlBase","setWithCredentials","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","parseAnimation","morphAnimationClips","CreateClipsFromMorphTargetSequences","initMaterials","substring","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","loadImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","CatmullRom","t2","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","Curve","arcLengthDivisions","LineCurve","CurvePath","curves","autoClose","EllipseCurve","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","SplineCurve","CubicBezierCurve","v3","QuadraticBezierCurve","getUtoTmapping","getPoint","divisions","lengths","getLengths","cacheArcLengths","current","last","sum","arcLengths","targetArcLength","comparison","lengthBefore","pt1","getTangent","mat","getTangentAt","MAX_VALUE","tz","makeRotationAxis","isLineCurve","tangent","curve","startPoint","endPoint","getLength","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","isEllipseCurve","isSplineCurve","getPoints","createGeometry","deltaAngle","twoPi","samePoints","intPoint","weight","point0","point1","point2","point3","PathPrototype","moveTo","lineTo","currentPoint","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","npts","aRadius","absarc","absellipse","firstPoint","lastPoint","Path","fromPoints","Shape","ShapePath","subPaths","currentPath","Font","FontLoader","holesPts","getPointsHoles","extractAllPoints","quadraticCurveTo","bezierCurveTo","splineThru","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","tmpPoints","tmpHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","createPath","glyph","glyphs","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","outline","_cachedOutline","action","ha","paths","createPaths","line_height","yMax","yMin","underlineThickness","char","ret","toShapes","lineGeometry","coneGeometry","AudioContext","webkitAudioContext","AudioLoader","StereoCamera","eyeSep","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCubeMap","AudioListener","gain","createGain","connect","destination","Audio","getInput","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","AnimationObjectGroup","var_args","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","root","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","ascSort","intersectObject","Clock","autoStart","oldTime","elapsedTime","running","Spherical","Cylindrical","MorphBlendMesh","animationsMap","animationsList","numFrames","endFrame","createAnimation","setAnimationWeight","ImmediateRenderObject","renderCallback","VertexNormalsHelper","nNormals","objGeometry","SpotLightHelper","cone","getBoneList","boneList","SkeletonHelper","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","rotateY","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","BoxHelper","ArrowHelper","headLength","headWidth","setDirection","setLength","AxisHelper","CubicPoly","c0","x3","tension","dt0","dt1","dt2","decodeAudioData","audioBuffer","instance","eyeRight","eyeLeft","xmin","xmax","eyeSepOnProjection","ymax","disconnect","positionX","setValueAtTime","currentTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","audioNode","play","createBufferSource","onended","onEnded","stop","getFilters","setFilters","refDistance","rolloffFactor","distanceModel","maxDistance","getByteFrequencyData","getFrequencyData","accuIndex","currentWeight","mix","originalValueOffset","getValue","firstValidIndex","bindings","unbind","isAnimationObjectGroup","directoryRe","trackRe","RegExp","supportedObjectNames","matches","results","lastDot","objectName","searchSkeleton","searchNodeSubtree","childNode","subTreeNode","resolvedProperty","propertyIndex","setValue_direct","targetObject","setValue_array","dest","setValue_arrayElement","setValue_fromArray","targetArray","sourceArray","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","_getValue_unbound","_setValue_unbound","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","lastObject","indicesByPath","lastBindingsIndex","lastBindings","lastBindingsPath","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","evaluate","accumulate","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","_bindAction","knownActions","_addInactiveAction","_lendBinding","saveOriginalState","_lendAction","restoreOriginalState","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","actionsByClip","actionByRoot","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","_","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","findByName","existingAction","newAction","nActions","_update","actionsToRemove","_removeInactiveAction","coords","isPerspectiveCamera","unproject","isOrthographicCamera","performance","Date","getElapsedTime","getDelta","newTime","other","vec3","autoCreateAnimations","firstAnimation","frameRanges","morph","setAnimationDirectionForward","directionBackwards","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","active","stopAnimation","mirroredLoop","keyframe","currentFrame","lastFrame","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","hx","hy","lightPlane","targetLine","setPoint","setColor","pz","CatmullRomCurve3","CubicBezierCurve3","QuadraticBezierCurve3","LineCurve3","ArcCurve","initNonuniformCatmullRom","initCatmullRom","calc","SceneUtils","Face4","LineStrip","LinePieces","MeshFaceMaterial","MultiMaterial","PointCloud","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","setDynamic","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","ClosedSplineCurve3","SplineCurve3","Spline","BoundingBoxHelper","EdgesHelper","WireframeHelper","XHRLoader","BinaryTextureLoader","construct","samplingCoef","setColors","random16","copyPosition","isIntersectionLine","intersectsLine","multiplyVector3","computeTangents","getObjectByName","setLens","setFocalLength","clearGroups","setBuffer","getData","GeometryUtils","geometry1","ImageUtils","Projector","projectVector","project","unprojectVector","pickingRay","CubeGeometry"],"mappings":"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","file":"main.7a83f0e8.map","sourceRoot":"..","sourcesContent":["/**\n* matter-js 0.13.0 by @liabru 2017-07-06\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass and density are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass is automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = _totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, body.position);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n\n            if (!body.isStatic) {\n                part.area = Vertices.area(part.vertices);\n                Body.setMass(part, body.density * part.area);\n\n                // update inertia (requires vertices to be at origin)\n                Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n                Body.setInertia(part, Vertices.inertia(part.vertices, part.mass));\n                Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n            }\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n\n        if (!body.isStatic) {\n            var total = _totalProperties(body);\n            body.area = total.area;\n            Body.setMass(body, total.mass);\n            Body.setInertia(body, total.inertia);\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    var _totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            properties.mass += part.mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, \n                                           Vector.mult(part.position, part.mass !== Infinity ? part.mass : 1));\n        }\n\n        properties.centre = Vector.div(properties.centre, \n                                       properties.mass !== Infinity ? properties.mass : body.parts.length);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Matter.Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Matter.Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.add\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = _getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = _regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = _getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    _bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = _createBucket(buckets, bucketId);\n                            _bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = _createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    var _regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return _createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    var _getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return _createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    var _createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    var _getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    var _createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    var _bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    var _bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    var _createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n    \n    var _pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > _pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, ray.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, ray.bounds)) {\n                        var collision = SAT.collides(part, ray);\n                        if (collision.collided) {\n                            collision.body = collision.bodyA = collision.bodyB = bodyA;\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = _overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = _overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = _overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = _findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = _findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    var _overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            _projectToAxis(projectionA, verticesA, axis);\n            _projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    var _projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    var _findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            _triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    var _triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        return obj instanceof HTMLElement;\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                _topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    var _topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                _topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n})();\n\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        _bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        _bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        _bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    var _bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    var _bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method updateAll\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    var _bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.13.0';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    var _getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp = (typeof window !== \"undefined\" ? window['decomp'] : typeof global !== \"undefined\" ? global['decomp'] : null);\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        _svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    var _svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle in radians between the two vectors relative to the x-axis.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        radius = radius || [8];\n\n        if (!radius.length)\n            radius = [radius];\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n    \n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || { \n            min: { \n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object); \n\n            if (min && max) { \n                if (min.x < bounds.min.x) \n                    bounds.min.x = min.x;\n                    \n                if (max.x > bounds.max.x) \n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y) \n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y) \n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n        \n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n    \n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y); \n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale, \n                        texture.height * -sprite.yOffset * sprite.yScale, \n                        texture.width * sprite.xScale, \n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y); \n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n                        \n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n                \n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n            \n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2, \n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n            \n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n                \n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth, \n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight, \n                    grid.bucketWidth, \n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n            \n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3), \n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y), \n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region. \n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( Function.prototype.name === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\t'use strict';\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '86';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RGB_S3TC_DXT1_Format = 2001;\nvar RGBA_S3TC_DXT1_Format = 2002;\nvar RGBA_S3TC_DXT3_Format = 2003;\nvar RGBA_S3TC_DXT5_Format = 2004;\nvar RGB_PVRTC_4BPPV1_Format = 2100;\nvar RGB_PVRTC_2BPPV1_Format = 2101;\nvar RGBA_PVRTC_4BPPV1_Format = 2102;\nvar RGBA_PVRTC_2BPPV1_Format = 2103;\nvar RGB_ETC1_Format = 2151;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: function () {\n\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n\t\tvar uuid = new Array( 36 );\n\t\tvar rnd = 0, r;\n\n\t\treturn function generateUUID() {\n\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\n\n\t\t\t\t\tuuid[ i ] = '-';\n\n\t\t\t\t} else if ( i === 14 ) {\n\n\t\t\t\t\tuuid[ i ] = '4';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n\t\t\t\t\tr = rnd & 0xf;\n\t\t\t\t\trnd = rnd >> 4;\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn uuid.join( '' );\n\n\t\t};\n\n\t}(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tvalue --;\n\t\tvalue |= value >> 1;\n\t\tvalue |= value >> 2;\n\t\tvalue |= value >> 4;\n\t\tvalue |= value >> 8;\n\t\tvalue |= value >> 16;\n\t\tvalue ++;\n\n\t\treturn value;\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\" : {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\" : {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tlengthManhattan: function() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tdistanceToManhattan: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( Texture.prototype, EventDispatcher.prototype, {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tfunction getDataURL( image ) {\n\n\t\t\tvar canvas;\n\n\t\t\tif ( image.toDataURL !== undefined ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar output = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tmeta.textures[ this.uuid ] = output;\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\tuv.multiply( this.repeat );\n\t\tuv.add( this.offset );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\t this.x = 1;\n\t\t\t this.y = 0;\n\t\t\t this.z = 0;\n\n\t\t} else {\n\n\t\t\t this.x = q.x / s;\n\t\t\t this.y = q.y / s;\n\t\t\t this.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tlengthManhattan: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nObject.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tinverse: function () {\n\n\t\treturn this.conjugate().normalize();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix =  qw * x + qy * z - qz * y;\n\t\tvar iy =  qw * y + qz * x - qx * z;\n\t\tvar iz =  qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function project( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tlengthManhattan: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\tthis.x = y * v.z - z * v.y;\n\t\tthis.y = z * v.x - x * v.z;\n\t\tthis.z = x * v.y - y * v.x;\n\n\t\treturn this;\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tdistanceToManhattan: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\tthis.y = c.y;\n\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0,       0,       0,       1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = q._x, y = q._y, z = q._z, w = q._w;\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\tte[ 4 ] = xy - wz;\n\t\tte[ 8 ] = xz + wy;\n\n\t\tte[ 1 ] = xy + wz;\n\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\tte[ 9 ] = yz - wx;\n\n\t\tte[ 2 ] = xz - wy;\n\t\tte[ 6 ] = yz + wx;\n\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0,  0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s,  c, 0,\n\t\t\t0, 0,  0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts,  c, 0, 0,\n\t\t\t0,  0, 1, 0,\n\t\t\t0,  0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\tthis.scale( scale );\n\t\tthis.setPosition( position );\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) { gl.uniform1f( this.addr, v ); }\nfunction setValue1i( gl, v ) { gl.uniform1i( this.addr, v ); }\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\n\telse gl.uniform2f( this.addr, v.x, v.y );\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tif ( v.x !== undefined )\n\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\telse if ( v.r !== undefined )\n\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\telse\n\t\tgl.uniform3fv( this.addr, v );\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\n\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tif ( v.elements === undefined ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t} else {\n\n\t\tmat3array.set( v.elements );\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tif ( v.elements === undefined ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t} else {\n\n\t\tmat4array.set( v.elements );\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar unit = renderer.allocTextureUnit();\n\tgl.uniform1i( this.addr, unit );\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar unit = renderer.allocTextureUnit();\n\tgl.uniform1i( this.addr, unit );\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) { gl.uniform2iv( this.addr, v ); }\nfunction setValue3iv( gl, v ) { gl.uniform3iv( this.addr, v ); }\nfunction setValue4iv( gl, v ) { gl.uniform4iv( this.addr, v ); }\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) { gl.uniform1fv( this.addr, v ); }\nfunction setValue1iv( gl, v ) { gl.uniform1iv( this.addr, v ); }\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar n = v.length,\n\t\tunits = allocTexUnits( renderer, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar n = v.length,\n\t\tunits = allocTexUnits( renderer, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value ) {\n\n\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t// are not allowed in structured uniforms.\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ] );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\tfor ( ; ; ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\tpath = info.name,\n\t\t\taddr = gl.getUniformLocation( program, path );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function () {\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tthis.r = r * r;\n\t\tthis.g = g * g;\n\t\tthis.b = b * b;\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function () {\n\n\t\tthis.r = Math.sqrt( this.r );\n\t\tthis.g = Math.sqrt( this.g );\n\t\tthis.b = Math.sqrt( this.b );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( optionalTarget ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\thsl.h = hue;\n\t\thsl.s = saturation;\n\t\thsl.l = lightness;\n\n\t\treturn hsl;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function ( h, s, l ) {\n\n\t\tvar hsl = this.getHSL();\n\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) },\n\n\t\tspecularMap: { value: null },\n\t\talphaMap: { value: null },\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) }\n\n\t}\n\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta / ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\\n\\tfloat b = 3.45068 + (4.18814 + y) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\\n\\treturn result;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transpose( const in mat3 v ) {\\n\\tmat3 tmp;\\n\\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\\n\\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\\n\\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\\n\\treturn tmp;\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = asin( flipNormal * reflectVec.y ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tfloat norm = texture2D( ltcMag, uv ).a;\\n\\t\\tvec4 t = texture2D( ltcMat, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3(   1,   0, t.y ),\\n\\t\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\t\\tvec3( t.w,   0, t.x )\\n\\t\\t);\\n\\t\\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_flip = \"#ifdef DOUBLE_SIDED\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\\tfloat flipNormal = 1.0;\\n#endif\\n\";\n\nvar normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";\n\nvar distanceRGBA_vert = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0 - getShadowMask() ) );\\n}\\n\";\n\nvar shadow_vert = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars: lights_pars,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_template: lights_template,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_flip: normal_flip,\n\tnormal_fragment: normal_fragment,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t\ttFlip: { value: - 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: {\n\t\t\tlightPos: { value: new Vector3() }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector2();\n\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector2();\n\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tvar result = optionalTarget || new Vector2();\n\n\t\treturn result.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector2();\n\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction LensFlarePlugin( renderer, flares ) {\n\n\tvar gl = renderer.context;\n\tvar state = renderer.state;\n\n\tvar vertexBuffer, elementBuffer;\n\tvar shader, program, attributes, uniforms;\n\n\tvar tempTexture, occlusionTexture;\n\n\tfunction init() {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 1, - 1,  0, 0,\n\t\t\t 1, - 1,  1, 0,\n\t\t\t 1,  1,  1, 1,\n\t\t\t- 1,  1,  0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\t// buffers\n\n\t\tvertexBuffer     = gl.createBuffer();\n\t\telementBuffer    = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t// textures\n\n\t\ttempTexture      = gl.createTexture();\n\t\tocclusionTexture = gl.createTexture();\n\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\tshader = {\n\n\t\t\tvertexShader: [\n\n\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\"uniform vec3 screenPosition;\",\n\t\t\t\t\"uniform vec2 scale;\",\n\t\t\t\t\"uniform float rotation;\",\n\n\t\t\t\t\"uniform sampler2D occlusionMap;\",\n\n\t\t\t\t\"attribute vec2 position;\",\n\t\t\t\t\"attribute vec2 uv;\",\n\n\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\"vUV = uv;\",\n\n\t\t\t\t\t\"vec2 pos = position;\",\n\n\t\t\t\t\t\"if ( renderType == 2 ) {\",\n\n\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\n\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\n\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\n\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\n\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\n\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( \"\\n\" ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\"uniform sampler2D map;\",\n\t\t\t\t\"uniform float opacity;\",\n\t\t\t\t\"uniform vec3 color;\",\n\n\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t// pink square\n\n\t\t\t\t\t\"if ( renderType == 0 ) {\",\n\n\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\n\t\t\t\t\t// restore\n\n\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\n\n\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\n\t\t\t\t\t// flare\n\n\t\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\n\t\t\t\t\t\t\"gl_FragColor = texture;\",\n\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\n\t\t\t\t\t\"}\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( \"\\n\" )\n\n\t\t};\n\n\t\tprogram = createProgram( shader );\n\n\t\tattributes = {\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\n\t\t};\n\n\t\tuniforms = {\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\n\t\t};\n\n\t}\n\n\t/*\n\t * Render lens flares\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t *         reads these back and calculates occlusion.\n\t */\n\n\tthis.render = function ( scene, camera, viewport ) {\n\n\t\tif ( flares.length === 0 ) return;\n\n\t\tvar tempPosition = new Vector3();\n\n\t\tvar invAspect = viewport.w / viewport.z,\n\t\t\thalfViewportWidth = viewport.z * 0.5,\n\t\t\thalfViewportHeight = viewport.w * 0.5;\n\n\t\tvar size = 16 / viewport.w,\n\t\t\tscale = new Vector2( size * invAspect, size );\n\n\t\tvar screenPosition = new Vector3( 1, 1, 0 ),\n\t\t\tscreenPositionPixels = new Vector2( 1, 1 );\n\n\t\tvar validArea = new Box2();\n\n\t\tvalidArea.min.set( viewport.x, viewport.y );\n\t\tvalidArea.max.set( viewport.x + ( viewport.z - 16 ), viewport.y + ( viewport.w - 16 ) );\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tgl.useProgram( program );\n\n\t\tstate.initAttributes();\n\t\tstate.enableAttribute( attributes.vertex );\n\t\tstate.enableAttribute( attributes.uv );\n\t\tstate.disableUnusedAttributes();\n\n\t\t// loop through all lens flares to update their occlusion and positions\n\t\t// setup gl and common used attribs/uniforms\n\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n\t\tgl.uniform1i( uniforms.map, 1 );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tstate.disable( gl.CULL_FACE );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n\t\t\tsize = 16 / viewport.w;\n\t\t\tscale.set( size * invAspect, size );\n\n\t\t\t// calc object screen position\n\n\t\t\tvar flare = flares[ i ];\n\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\n\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n\t\t\ttempPosition.applyMatrix4( camera.projectionMatrix );\n\n\t\t\t// setup arrays for gl programs\n\n\t\t\tscreenPosition.copy( tempPosition );\n\n\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\n\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\n\n\t\t\t// screen cull\n\n\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\n\n\t\t\t\t// save current RGB to temp texture\n\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t// render pink quad\n\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n\t\t\t\tstate.disable( gl.BLEND );\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t// copy result to occlusionMap\n\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t// restore graphics\n\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t// update object positions\n\n\t\t\t\tflare.positionScreen.copy( screenPosition );\n\n\t\t\t\tif ( flare.customUpdateCallback ) {\n\n\t\t\t\t\tflare.customUpdateCallback( flare );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tflare.updateLensFlares();\n\n\t\t\t\t}\n\n\t\t\t\t// render flares\n\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n\t\t\t\tstate.enable( gl.BLEND );\n\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\n\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\n\n\t\t\t\t\t\tscale.x = size * invAspect;\n\t\t\t\t\t\tscale.y = size;\n\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n\t\t\t\t\t\trenderer.setTexture2D( sprite.texture, 1 );\n\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tstate.enable( gl.CULL_FACE );\n\t\tstate.enable( gl.DEPTH_TEST );\n\t\tstate.buffers.depth.setMask( true );\n\n\t\trenderer.resetGLState();\n\n\t};\n\n\tfunction createProgram( shader ) {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n\t\tgl.compileShader( fragmentShader );\n\t\tgl.compileShader( vertexShader );\n\n\t\tgl.attachShader( program, fragmentShader );\n\t\tgl.attachShader( program, vertexShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n}\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpritePlugin( renderer, sprites ) {\n\n\tvar gl = renderer.context;\n\tvar state = renderer.state;\n\n\tvar vertexBuffer, elementBuffer;\n\tvar program, attributes, uniforms;\n\n\tvar texture;\n\n\t// decompose matrixWorld\n\n\tvar spritePosition = new Vector3();\n\tvar spriteRotation = new Quaternion();\n\tvar spriteScale = new Vector3();\n\n\tfunction init() {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 0.5, - 0.5,  0, 0,\n\t\t\t  0.5, - 0.5,  1, 0,\n\t\t\t  0.5,   0.5,  1, 1,\n\t\t\t- 0.5,   0.5,  0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\tvertexBuffer  = gl.createBuffer();\n\t\telementBuffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\tprogram = createProgram();\n\n\t\tattributes = {\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\n\t\t};\n\n\t\tuniforms = {\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\n\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\n\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\n\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\n\t\t};\n\n\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tcanvas.width = 8;\n\t\tcanvas.height = 8;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\ttexture = new Texture( canvas );\n\t\ttexture.needsUpdate = true;\n\n\t}\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( sprites.length === 0 ) return;\n\n\t\t// setup gl\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tgl.useProgram( program );\n\n\t\tstate.initAttributes();\n\t\tstate.enableAttribute( attributes.position );\n\t\tstate.enableAttribute( attributes.uv );\n\t\tstate.disableUnusedAttributes();\n\n\t\tstate.disable( gl.CULL_FACE );\n\t\tstate.enable( gl.BLEND );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\tvar oldFogType = 0;\n\t\tvar sceneFogType = 0;\n\t\tvar fog = scene.fog;\n\n\t\tif ( fog ) {\n\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\toldFogType = 1;\n\t\t\t\tsceneFogType = 1;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\toldFogType = 2;\n\t\t\t\tsceneFogType = 2;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\toldFogType = 0;\n\t\t\tsceneFogType = 0;\n\n\t\t}\n\n\n\t\t// update positions and sort\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t}\n\n\t\tsprites.sort( painterSortStable );\n\n\t\t// render all sprites\n\n\t\tvar scale = [];\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\t\t\tvar material = sprite.material;\n\n\t\t\tif ( material.visible === false ) continue;\n\n\t\t\tsprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\tvar fogType = 0;\n\n\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\tfogType = sceneFogType;\n\n\t\t\t}\n\n\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\toldFogType = fogType;\n\n\t\t\t}\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t}\n\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\t\t\tstate.buffers.depth.setTest( material.depthTest );\n\t\t\tstate.buffers.depth.setMask( material.depthWrite );\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\trenderer.setTexture2D( material.map, 0 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\tsprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tstate.enable( gl.CULL_FACE );\n\n\t\trenderer.resetGLState();\n\n\t};\n\n\tfunction createProgram() {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform float rotation;',\n\t\t\t'uniform vec2 scale;',\n\t\t\t'uniform vec2 uvOffset;',\n\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t'attribute vec2 position;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'varying vec2 vUV;',\n\n\t\t\t'void main() {',\n\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\n\n\t\t\t\t'vec2 alignedPosition = position * scale;',\n\n\t\t\t\t'vec2 rotatedPosition;',\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t\t'vec4 finalPosition;',\n\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\n\n\t\t\t\t'gl_Position = finalPosition;',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform vec3 color;',\n\t\t\t'uniform sampler2D map;',\n\t\t\t'uniform float opacity;',\n\n\t\t\t'uniform int fogType;',\n\t\t\t'uniform vec3 fogColor;',\n\t\t\t'uniform float fogDensity;',\n\t\t\t'uniform float fogNear;',\n\t\t\t'uniform float fogFar;',\n\t\t\t'uniform float alphaTest;',\n\n\t\t\t'varying vec2 vUV;',\n\n\t\t\t'void main() {',\n\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\n\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\n\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t\t'if ( fogType > 0 ) {',\n\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n\t\t\t\t\t'float fogFactor = 0.0;',\n\n\t\t\t\t\t'if ( fogType == 1 ) {',\n\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\n\t\t\t\t\t'} else {',\n\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\n\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t\t\t'}',\n\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\n\t\t\t\t'}',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.compileShader( vertexShader );\n\t\tgl.compileShader( fragmentShader );\n\n\t\tgl.attachShader( program, vertexShader );\n\t\tgl.attachShader( program, fragmentShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn b.id - a.id;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.shading = SmoothShading; // THREE.FlatShading, THREE.SmoothShading\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\tthis.visible = true;\n\n\tthis.needsUpdate = true;\n\n}\n\nObject.assign( Material.prototype, EventDispatcher.prototype, {\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = meta === undefined;\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.shading !== SmoothShading ) data.shading = this.shading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tdata.skinning = this.skinning;\n\t\tdata.morphTargets = this.morphTargets;\n\n\t\tdata.dithering = this.dithering;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.shading = source.shading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.overdraw = source.overdraw;\n\n\t\tthis.visible = source.visible;\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = source.defines;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = this.uniforms;\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\tvar i, l;\n\n\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn result.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Sphere();\n\n\t\t\tthis.getCenter( result.center );\n\n\t\t\tresult.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3()\n\t\t];\n\n\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We use the following equation to compute the signed distance from\n\t\t// the center of the sphere to the plane.\n\t\t//\n\t\t// distance = q * n - d\n\t\t//\n\t\t// If this distance is greater than the radius of the sphere,\n\t\t// then there is no intersection.\n\n\t\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\tresult.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tresult.sub( this.center ).normalize();\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\tgetBoundingBox: function ( optionalTarget ) {\n\n\t\tvar box = optionalTarget || new Box3();\n\n\t\tbox.set( this.center, this.center );\n\t\tbox.expandByScalar( this.radius );\n\n\t\treturn box;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, optionalTarget ) {\n\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\n\n\t},\n\n\torthoPoint: function ( point, optionalTarget ) {\n\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn result.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\t// transform normal based on theory here:\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant = this.constant - offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p1 = new Vector3(),\n\t\t\tp2 = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _lights, _objects, capabilities ) {\n\n\tvar _gl = _renderer.context,\n\t\t_state = _renderer.state,\n\t\t_frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_lightShadows = _lights.shadows,\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( capabilities.maxTextureSize, capabilities.maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tvar depthMaterialTemplate = new MeshDepthMaterial();\n\tdepthMaterialTemplate.depthPacking = RGBADepthPacking;\n\tdepthMaterialTemplate.clipping = true;\n\n\tvar distanceShader = ShaderLib[ \"distanceRGBA\" ];\n\tvar distanceUniforms = UniformsUtils.clone( distanceShader.uniforms );\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = depthMaterialTemplate.clone();\n\t\tdepthMaterial.morphTargets = useMorphing;\n\t\tdepthMaterial.skinning = useSkinning;\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\tvar distanceMaterial = new ShaderMaterial( {\n\t\t\tdefines: {\n\t\t\t\t'USE_SHADOWMAP': ''\n\t\t\t},\n\t\t\tuniforms: distanceUniforms,\n\t\t\tvertexShader: distanceShader.vertexShader,\n\t\t\tfragmentShader: distanceShader.fragmentShader,\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning,\n\t\t\tclipping: true\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.renderReverseSided = true;\n\tthis.renderSingleSided = true;\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( _lightShadows.length === 0 ) return;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( _gl.BLEND );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\n\n\t\t\tvar light = _lightShadows[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Restore GL state.\n\t\tvar clearColor = _renderer.getClearColor();\n\t\tvar clearAlpha = _renderer.getClearAlpha();\n\t\t_renderer.setClearColor( clearColor, clearAlpha );\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tvar side = material.side;\n\n\t\tif ( scope.renderSingleSided && side == DoubleSide ) {\n\n\t\t\tside = FrontSide;\n\n\t\t}\n\n\t\tif ( scope.renderReverseSided ) {\n\n\t\t\tif ( side === FrontSide ) side = BackSide;\n\t\t\telse if ( side === BackSide ) side = FrontSide;\n\n\t\t}\n\n\t\tresult.side = side;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\n\n\t\t\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = {};\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = -1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers[ attribute.uuid ];\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\t\t\n\t\tvar data = buffers[ attribute.uuid ];\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tdelete buffers[ attribute.uuid ];\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers[ attribute.uuid ];\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers[ attribute.uuid ] = createBuffer( attribute, bufferType );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject.assign( Object3D.prototype, EventDispatcher.prototype, {\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\t\t\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Quaternion();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldRotation: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldRotation( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Euler();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is '' when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || meta === '' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.geometry !== undefined ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\tthis.projectionMatrix = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.view = {\n\t\t\tfullWidth: fullWidth,\n\t\t\tfullHeight: fullHeight,\n\t\t\toffsetX: x,\n\t\t\toffsetY: y,\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function() {\n\n\t\tthis.view = null;\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tthis.view = {\n\t\t\tfullWidth: fullWidth,\n\t\t\tfullHeight: fullHeight,\n\t\t\toffsetX: x,\n\t\t\toffsetY: y,\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tthis.view = null;\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan(\n\t\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( view !== null ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar count = 0;\nfunction GeometryIdCount() { return count++; }\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( Geometry.prototype, EventDispatcher.prototype, {\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tvar tempNormals = [];\n\t\tvar tempUVs = [];\n\t\tvar tempUVs2 = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\treturn offset;\n\n\t},\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeLineDistances: function () {\n\n\t\tvar d = 0;\n\t\tvar vertices = this.vertices;\n\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.lineDistances[ i ] = d;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.uuid = _Math.generateUUID();\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.onUploadCallback = function () {};\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyIndicesArray: function ( indices ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\tvar index = indices[ i ];\n\n\t\t\tarray[ offset ++ ] = index.a;\n\t\t\tarray[ offset ++ ] = index.b;\n\t\t\tarray[ offset ++ ] = index.c;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.indices = [];\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n}\n\nBufferGeometry.MaxIndex = 65535;\n\nObject.assign( BufferGeometry.prototype, EventDispatcher.prototype, {\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\treturn offset;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\tif ( geometry.indices.length > 0 ) {\n\n\t\t\tvar TypeArray = arrayMax( geometry.indices ) > 65535 ? Uint32Array : Uint16Array;\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n\t\t\tthis.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\t\tvar groups = this.groups;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar normals = this.attributes.normal;\n\n\t\tvar x, y, z, n;\n\n\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\tx = normals.getX( i );\n\t\t\ty = normals.getY( i );\n\t\t\tz = normals.getZ( i );\n\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\n\n\t\t\tnormals.setXYZ( i, x * n, y * n, z * n );\n\n\t\t}\n\n\t},\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\n\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\n\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\tresult.subVectors( point, this.origin );\n\t\tvar directionDistance = result.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn result.copy( this.origin );\n\n\t\t}\n\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, optionalTarget ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, optionalTarget );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t :  null;\n\n\t},\n\n\tintersectPlane: function ( plane, optionalTarget ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, optionalTarget );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, optionalTarget ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tnormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function normal( a, b, c, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tresult.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\tresult.cross( v0 );\n\n\t\t\tvar resultLengthSq = result.lengthSq();\n\t\t\tif ( resultLengthSq > 0 ) {\n\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn result.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tbarycoordFromPoint: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn result.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tvar result = Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tarea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function area() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tmidpoint: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tnormal: function ( optionalTarget ) {\n\n\t\treturn Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n\t},\n\n\tplane: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Plane();\n\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n\t\treturn Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar plane = new Plane();\n\t\tvar edgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\tvar projectedPoint = new Vector3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function closestPointToPoint( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\tvar minDistance = Infinity;\n\n\t\t\t// project the point onto the plane of the triangle\n\n\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t// check if the projection lies within the triangle\n\n\t\t\tif( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t// if so, this is the closest point\n\n\t\t\t\tresult.copy( projectedPoint );\n\n\t\t\t} else {\n\n\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\n\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\tif( distance < minDistance ) {\n\n\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\tresult.copy( closestPoint );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar barycoord = new Vector3();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\tTriangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\n\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\treturn uv1.clone();\n\n\t\t}\n\n\t\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\t\t\tvar material = object.material;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t}\n\n\t\t\t\tintersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );\n\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar i, l;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tfor ( i = 0, l = index.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tfor ( i = 0, l = position.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\ta = i;\n\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeCamera, planeMesh;\n\tvar boxCamera, boxMesh;\n\n\tfunction render( scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\tif ( boxCamera === undefined ) {\n\n\t\t\t\tboxCamera = new PerspectiveCamera();\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 5, 5, 5 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tboxCamera.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\tboxCamera.matrixWorld.extractRotation( camera.matrixWorld );\n\t\t\tboxCamera.matrixWorldInverse.getInverse( boxCamera.matrixWorld );\n\n\t\t\tboxMesh.material.uniforms[ \"tCube\" ].value = background;\n\t\t\tboxMesh.modelViewMatrix.multiplyMatrices( boxCamera.matrixWorldInverse, boxMesh.matrixWorld );\n\n\t\t\tobjects.update( boxMesh );\n\n\t\t\trenderer.renderBufferDirect( boxCamera, null, boxMesh.geometry, boxMesh.material, boxMesh, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.map = background;\n\n\t\t\tobjects.update( planeMesh );\n\n\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction WebGLRenderList() {\n\n\tvar opaque = [];\n\tvar opaqueLastIndex = - 1;\n\n\tvar transparent = [];\n\tvar transparentLastIndex = - 1;\n\n\tfunction init() {\n\n\t\topaqueLastIndex = - 1;\n\t\ttransparentLastIndex = - 1;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar array, index;\n\n\t\t// allocate the next position in the appropriate array\n\n\t\tif ( material.transparent ) {\n\n\t\t\tarray = transparent;\n\t\t\tindex = ++ transparentLastIndex;\n\n\t\t} else {\n\n\t\t\tarray = opaque;\n\t\t\tindex = ++ opaqueLastIndex;\n\n\t\t}\n\n\t\t// recycle existing render item or grow the array\n\n\t\tvar renderItem = array[ index ];\n\n\t\tif ( renderItem ) {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t} else {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\t// assert( index === array.length );\n\t\t\tarray.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction finish() {\n\n\t\topaque.length = opaqueLastIndex + 1;\n\t\ttransparent.length = transparentLastIndex + 1;\n\n\t}\n\n\tfunction sort() {\n\n\t\topaque.sort( painterSortStable );\n\t\ttransparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\t\tvar list = lists[ hash ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ hash ] = list;\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\textension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, infoRender ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar position = geometry.attributes.position;\n\n\t\tif ( position.isInterleavedBufferAttribute ) {\n\n\t\t\tcount = position.data.count;\n\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t} else {\n\n\t\t\textension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );\n\n\t\t}\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, infoMemory ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\t// TODO Remove duplicate code\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ geometry.id ];\n\n\t\t}\n\n\t\tattribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfoMemory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfoMemory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLLights() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( gl, geometries, infoRender ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = infoRender.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction clear() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tclear: clear\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear','( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB','( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE','( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = \"Linear\";\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = \"Reinhard\";\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = \"Uncharted2\";\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = \"OptimizedCineon\";\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program, identifiers ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, code, material, shader, parameters ) {\n\n\tvar gl = renderer.context;\n\n\tvar extensions = material.extensions;\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines,\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines,\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\t\t\t'#define UNION_CLIPPING_PLANES ' + (parameters.numClippingPlanes - parameters.numClipIntersection),\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\n\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\n\tif ( ! material.isShaderMaterial ) {\n\n\t\tvertexShader = unrollLoops( vertexShader );\n\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program );\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function() {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms =\n\t\t\t\tnew WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function() {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function() {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function() {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function() {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = renderer.getPrecision();\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.shading === FlatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, code, material, shader, parameters );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, infoMemory ) {\n\n\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = _Math.nearestPowerOfTwo( image.width );\n\t\t\tcanvas.height = _Math.nearestPowerOfTwo( image.height );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tinfoMemory.textures --;\n\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfoMemory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfoMemory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\" );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfoMemory.textures ++;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\tglFormat = paramThreeToGL( texture.format ),\n\t\tglType = paramThreeToGL( texture.type );\n\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t        console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\n\t\tvar glType = paramThreeToGL( renderTarget.texture.type );\n\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( !( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error('Unknown depthTexture format')\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfoMemory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t_gl.generateMipmap( target );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = {};\n\n\tfunction get( object ) {\n\n\t\tvar uuid = object.uuid;\n\t\tvar map = properties[ uuid ];\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties[ uuid ] = map;\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tdelete properties[ object.uuid ];\n\n\t}\n\n\tfunction clear() {\n\n\t\tproperties = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tclear: clear\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, paramThreeToGL ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4();\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( 0, 0, 0, 1 );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar capabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar currentScissorTest = null;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tvar version = parseFloat( /^WebGL\\ ([0-9])/.exec( gl.getParameter( gl.VERSION ) )[ 1 ] );\n\tvar lineWidthAvailable = parseFloat( version ) >= 1.0;\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t//\n\n\tfunction init() {\n\n\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\t\tdepthBuffer.setClear( 1 );\n\t\tstencilBuffer.setClear( 0 );\n\n\t\tenable( gl.DEPTH_TEST );\n\t\tdepthBuffer.setFunc( LessEqualDepth );\n\n\t\tsetFlipSided( false );\n\t\tsetCullFace( CullFaceBack );\n\t\tenable( gl.CULL_FACE );\n\n\t\tenable( gl.BLEND );\n\t\tsetBlending( NormalBlending );\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tcapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tcapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending !== NoBlending ) {\n\n\t\t\tenable( gl.BLEND );\n\n\t\t} else {\n\n\t\t\tdisable( gl.BLEND );\n\n\t\t}\n\n\t\tif ( ( blending !== CustomBlending ) && ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) ) {\n\n\t\t\tif ( blending === AdditiveBlending ) {\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t}\n\n\t\t\t} else if ( blending === SubtractiveBlending ) {\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t}\n\n\t\t\t} else if ( blending === MultiplyBlending ) {\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t}\n\n\t\tif ( blending === CustomBlending ) {\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t}\n\n\t}\n\n\tfunction setMaterial( material ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tsetFlipSided( material.side === BackSide );\n\n\t\tmaterial.transparent === true\n\t\t\t? setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n\t\t\t: setBlending( NoBlending );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction getScissorTest() {\n\n\t\treturn currentScissorTest;\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tcurrentScissorTest = scissorTest;\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinit: init,\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tgetScissorTest: getScissorTest,\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get( 'EXT_frag_depth' );\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tif ( 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( device.isPresenting ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t} else if ( scope.enabled ) {\n\n\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t}\n\n\t}\n\n\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t//\n\n\tthis.enabled = false;\n\tthis.standing = false;\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( device === null ) return camera;\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tvar pose = frameData.pose;\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\tcamera.position.fromArray( pose.position );\n\n\t\t} else {\n\n\t\t\tcamera.position.set( 0, 0, 0 );\n\n\t\t}\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\tcamera.quaternion.fromArray( pose.orientation );\n\n\t\t}\n\n\t\tcamera.updateMatrixWorld();\n\n\t\tvar stageParameters = device.stageParameters;\n\n\t\tif ( this.standing && stageParameters ) {\n\n\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\t\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\t\tcamera.matrixWorld.multiply( standingMatrix );\n\t\t\tcamera.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\tif ( this.standing && stageParameters ) {\n\n\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tvar parent = camera.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t// HACK @mrdoob\n\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( device && device.isPresenting ) device.submitFrame();\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_etc1':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function() {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function() {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled ||\n\t\t\t\tplanes === null || planes.length === 0 ||\n\t\t\t\trenderingShadows && ! clipShadows ) {\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset;\n\t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).\n\t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\t\n\t\treturn dstArray;\n\n\t}\n\n}\n\n// import { Sphere } from '../math/Sphere';\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n\tvar lights = [];\n\n\tvar currentRenderList = null;\n\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tvar sprites = [];\n\tvar lensFlares = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t// internal state cache\n\n\t\t_currentProgram = null,\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\t\t_currentGeometryProgram = '',\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t_currentViewport = new Vector4(),\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3(),\n\t\t_matrix4 = new Matrix4(),\n\t\t_matrix42 = new Matrix4(),\n\n\t\t// light arrays cache\n\n\t\t_lights = {\n\n\t\t\thash: '',\n\n\t\t\tambient: [ 0, 0, 0 ],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\tpoint: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: [],\n\n\t\t\tshadows: []\n\n\t\t},\n\n\t\t// info\n\n\t\t_infoMemory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t},\n\n\t\t_infoRender = {\n\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\tvertices: 0,\n\t\t\tfaces: 0,\n\t\t\tpoints: 0\n\n\t\t};\n\n\tthis.info = {\n\n\t\trender: _infoRender,\n\t\tmemory: _infoMemory,\n\t\tprograms: null\n\n\t};\n\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n\t\t};\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\n\t\t\t} else {\n\n\t\t\t\tthrow 'Error creating WebGL context.';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\n\n\t}\n\n\tvar extensions = new WebGLExtensions( _gl );\n\n\textensions.get( 'WEBGL_depth_texture' );\n\textensions.get( 'OES_texture_float' );\n\textensions.get( 'OES_texture_float_linear' );\n\textensions.get( 'OES_texture_half_float' );\n\textensions.get( 'OES_texture_half_float_linear' );\n\textensions.get( 'OES_standard_derivatives' );\n\textensions.get( 'ANGLE_instanced_arrays' );\n\n\tif ( extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\tBufferGeometry.MaxIndex = 4294967296;\n\n\t}\n\n\tvar capabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\tvar state = new WebGLState( _gl, extensions, paramThreeToGL );\n\n\tvar properties = new WebGLProperties();\n\tvar textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, _infoMemory );\n\tvar attributes = new WebGLAttributes( _gl );\n\tvar geometries = new WebGLGeometries( _gl, attributes, _infoMemory );\n\tvar objects = new WebGLObjects( _gl, geometries, _infoRender );\n\tvar programCache = new WebGLPrograms( this, capabilities );\n\tvar lightCache = new WebGLLights();\n\tvar renderLists = new WebGLRenderLists();\n\n\tvar background = new WebGLBackground( this, state, objects, _premultipliedAlpha );\n\tvar vr = new WebVRManager( this );\n\n\tthis.info.programs = programCache.programs;\n\n\tvar bufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );\n\tvar indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\n\t//\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\tfunction setDefaultGLState() {\n\n\t\tstate.init();\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t}\n\n\tfunction resetGLState() {\n\n\t\t_currentProgram = null;\n\t\t_currentCamera = null;\n\n\t\t_currentGeometryProgram = '';\n\t\t_currentMaterialId = - 1;\n\n\t\tstate.reset();\n\n\t}\n\n\tsetDefaultGLState();\n\n\tthis.context = _gl;\n\tthis.capabilities = capabilities;\n\tthis.extensions = extensions;\n\tthis.properties = properties;\n\tthis.renderLists = renderLists;\n\tthis.state = state;\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( this, _lights, objects, capabilities );\n\n\tthis.shadowMap = shadowMap;\n\n\n\t// Plugins\n\n\tvar spritePlugin = new SpritePlugin( this, sprites );\n\tvar lensFlarePlugin = new LensFlarePlugin( this, lensFlares );\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.getMaxAnisotropy = function () {\n\n\t\treturn capabilities.getMaxAnisotropy();\n\n\t};\n\n\tthis.getPrecision = function () {\n\n\t\treturn capabilities.precision;\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tvar device = vr.getDevice();\n\n\t\tif ( device && device.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = background.getClearColor;\n\tthis.setClearColor = background.setClearColor;\n\tthis.getClearAlpha = background.getClearAlpha;\n\tthis.setClearAlpha = background.setClearAlpha;\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t};\n\n\t// Reset\n\n\tthis.resetGLState = resetGLState;\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\n\t\trenderLists.dispose();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tresetGLState();\n\t\tsetDefaultGLState();\n\n\t\tproperties.clear();\n\t\tobjects.clear();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program, material ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t! material.isMeshStandardMaterial &&\n\t\t\t\t! material.isMeshNormalMaterial &&\n\t\t\t\tmaterial.shading === FlatShading ) {\n\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\n\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tfunction absNumericalSort( a, b ) {\n\n\t\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\n\n\t}\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tstate.setMaterial( material );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargetInfluences = object.morphTargetInfluences;\n\n\t\tif ( morphTargetInfluences !== undefined ) {\n\n\t\t\t// TODO Remove allocations\n\n\t\t\tvar activeInfluences = [];\n\n\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\n\n\t\t\t\tvar influence = morphTargetInfluences[ i ];\n\t\t\t\tactiveInfluences.push( [ influence, i ] );\n\n\t\t\t}\n\n\t\t\tactiveInfluences.sort( absNumericalSort );\n\n\t\t\tif ( activeInfluences.length > 8 ) {\n\n\t\t\t\tactiveInfluences.length = 8;\n\n\t\t\t}\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\n\n\t\t\t\tvar influence = activeInfluences[ i ];\n\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\n\n\t\t\t\tif ( influence[ 0 ] !== 0 ) {\n\n\t\t\t\t\tvar index = influence[ 1 ];\n\n\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\n\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = activeInfluences.length, il = morphInfluences.length; i < il; i ++ ) {\n\n\t\t\t\tmorphInfluences[ i ] = 0.0;\n\n\t\t\t}\n\n\t\t\tprogram.getUniforms().setValue( _gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = 0;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( startIndex === undefined ) startIndex = 0;\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, ( startIndex * stride + offset ) * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * bytesPerElement );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tlights = [];\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tlights.push( object );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tsetupLights( lights, camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Rendering\n\n\tthis.animate = function ( callback ) {\n\n\t\tfunction onFrame() {\n\n\t\t\tcallback();\n\n\t\t\t( vr.getDevice() || window ).requestAnimationFrame( onFrame );\n\n\t\t}\n\n\t\t( vr.getDevice() || window ).requestAnimationFrame( onFrame );\n\n\t};\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram = '';\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\tlights.length = 0;\n\t\tsprites.length = 0;\n\t\tlensFlares.length = 0;\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tsetupShadows( lights );\n\n\t\tshadowMap.render( scene, camera );\n\n\t\tsetupLights( lights, camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\t_infoRender.frame ++;\n\t\t_infoRender.calls = 0;\n\t\t_infoRender.vertices = 0;\n\t\t_infoRender.faces = 0;\n\t\t_infoRender.points = 0;\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// custom render plugins (post pass)\n\n\t\tspritePlugin.render( scene, camera );\n\t\tlensFlarePlugin.render( scene, camera, _currentViewport );\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t_this.setScissorTest( false );\n\n\t\t}\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t};\n\n\t/*\n\t// TODO Duplicated code (Frustum)\n\n\tvar _sphere = new Sphere();\n\n\tfunction isObjectViewable( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null )\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).\n\t\tapplyMatrix4( object.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSpriteViewable( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSphereViewable( sphere ) {\n\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\tif ( numPlanes === 0 ) return true;\n\n\t\tvar planes = _this.clippingPlanes,\n\n\t\t\tcenter = sphere.center,\n\t\t\tnegRad = - sphere.radius,\n\t\t\ti = 0;\n\n\t\tdo {\n\n\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t} while ( ++ i !== numPlanes );\n\n\t\treturn true;\n\n\t}\n\t*/\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( ! object.visible ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tlights.push( object );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tsprites.push( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLensFlare ) {\n\n\t\t\t\tlensFlares.push( object );\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t_this.setViewport( x, y, width, height );\n\t\t\t\t\t\t_this.setScissor( x, y, width, height );\n\t\t\t\t\t\t_this.setScissorTest( true );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram = '';\n\n\t\t\trenderObjectImmediate( object, program, material );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, _lights, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.lightsHash = _lights.hash;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = _lights.ambient;\n\t\t\tuniforms.directionalLights.value = _lights.directional;\n\t\t\tuniforms.spotLights.value = _lights.spot;\n\t\t\tuniforms.rectAreaLights.value = _lights.rectArea;\n\t\t\tuniforms.pointLights.value = _lights.point;\n\t\t\tuniforms.hemisphereLights.value = _lights.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && materialProperties.lightsHash !== _lights.hash ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( program.id !== _currentProgram ) {\n\n\t\t\t_gl.useProgram( program.program );\n\t\t\t_currentProgram = program.id;\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.nextPowerOfTwo( Math.ceil( size ) );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isMeshNormalMaterial ||\n\t\t\t\tmaterial.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t}\n\n\t\t\t// refresh single material specific uniforms\n\n\t\t\tif ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\t\tm_uniforms.displacementMap.value = material.displacementMap;\n\t\t\t\t\tm_uniforms.displacementScale.value = material.displacementScale;\n\t\t\t\t\tm_uniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltcMat !== undefined ) m_uniforms.ltcMat.value = UniformsLib.LTC_MAT_TEXTURE;\n\t\t\tif ( m_uniforms.ltcMag !== undefined ) m_uniforms.ltcMag.value = UniformsLib.LTC_MAG_TEXTURE;\n\n\t\t\tWebGLUniforms.upload(\n\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tuniforms.diffuse.value = material.color;\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tuniforms.map.value = material.map;\n\t\tuniforms.specularMap.value = material.specularMap;\n\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tvar offset = uvScaleMap.offset;\n\t\t\tvar repeat = uvScaleMap.repeat;\n\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t}\n\n\t\tuniforms.envMap.value = material.envMap;\n\n\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tvar offset = material.map.offset;\n\t\t\tvar repeat = material.map.repeat;\n\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// Lighting\n\n\tfunction setupShadows( lights ) {\n\n\t\tvar lightShadowsLength = 0;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t_lights.shadows[ lightShadowsLength ] = light;\n\t\t\t\tlightShadowsLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t_lights.shadows.length = lightShadowsLength;\n\n\t}\n\n\tfunction setupLights( lights, camera ) {\n\n\t\tvar l, ll, light, shadow,\n\t\t\tr = 0, g = 0, b = 0,\n\t\t\tcolor,\n\t\t\tintensity,\n\t\t\tdistance,\n\t\t\tshadowMap,\n\n\t\t\tviewMatrix = camera.matrixWorldInverse,\n\n\t\t\tdirectionalLength = 0,\n\t\t\tpointLength = 0,\n\t\t\tspotLength = 0,\n\t\t\trectAreaLength = 0,\n\t\t\themiLength = 0;\n\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\n\n\t\t\tlight = lights[ l ];\n\n\t\t\tcolor = light.color;\n\t\t\tintensity = light.intensity;\n\t\t\tdistance = light.distance;\n\n\t\t\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tshadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\t_lights.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tshadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\t_lights.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\t_lights.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t// (a) intensity controls irradiance of entire light\n\t\t\t\tuniforms.color\n\t\t\t\t\t.copy( color )\n\t\t\t\t\t.multiplyScalar( intensity / ( light.width * light.height ) );\n\n\t\t\t\t// (b) intensity controls the radiance per light area\n\t\t\t\t// uniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\t_matrix42.identity();\n\t\t\t\t_matrix4.copy( light.matrixWorld );\n\t\t\t\t_matrix4.premultiply( viewMatrix );\n\t\t\t\t_matrix42.extractRotation( _matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5,                0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set(              0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( _matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( _matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\t_lights.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tshadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\t_lights.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t_lights.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\t_lights.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t_lights.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t_lights.ambient[ 0 ] = r;\n\t\t_lights.ambient[ 1 ] = g;\n\t\t_lights.ambient[ 2 ] = b;\n\n\t\t_lights.directional.length = directionalLength;\n\t\t_lights.spot.length = spotLength;\n\t\t_lights.rectArea.length = rectAreaLength;\n\t\t_lights.point.length = pointLength;\n\t\t_lights.hemi.length = hemiLength;\n\n\t\t// TODO (sam-g-steel) why aren't we using join\n\t\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + _lights.shadows.length;\n\n\t}\n\n\t// GL state setting\n\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n\t\tstate.setCullFace( cullFace );\n\t\tstate.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );\n\n\t};\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tvar framebuffer;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\n\t\t} else {\n\n\t\t\tframebuffer = null;\n\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tstate.viewport( _currentViewport );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && paramThreeToGL( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && paramThreeToGL( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( textureFormat ), paramThreeToGL( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t// Map three.js constants to WebGL constants\n\n\tfunction paramThreeToGL( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return _gl.REPEAT;\n\t\tif ( p === ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\n\t\tif ( p === MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\n\n\t\tif ( p === NearestFilter ) return _gl.NEAREST;\n\t\tif ( p === NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\n\t\tif ( p === NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\n\n\t\tif ( p === LinearFilter ) return _gl.LINEAR;\n\t\tif ( p === LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\n\t\tif ( p === LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\n\n\t\tif ( p === UnsignedByteType ) return _gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return _gl.BYTE;\n\t\tif ( p === ShortType ) return _gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return _gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return _gl.INT;\n\t\tif ( p === UnsignedIntType ) return _gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return _gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return _gl.ALPHA;\n\t\tif ( p === RGBFormat ) return _gl.RGB;\n\t\tif ( p === RGBAFormat ) return _gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return _gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return _gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return _gl.DEPTH_STENCIL;\n\n\t\tif ( p === AddEquation ) return _gl.FUNC_ADD;\n\t\tif ( p === SubtractEquation ) return _gl.FUNC_SUBTRACT;\n\t\tif ( p === ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\n\n\t\tif ( p === ZeroFactor ) return _gl.ZERO;\n\t\tif ( p === OneFactor ) return _gl.ONE;\n\t\tif ( p === SrcColorFactor ) return _gl.SRC_COLOR;\n\t\tif ( p === OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\n\t\tif ( p === SrcAlphaFactor ) return _gl.SRC_ALPHA;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\n\t\tif ( p === DstAlphaFactor ) return _gl.DST_ALPHA;\n\t\tif ( p === OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\n\n\t\tif ( p === DstColorFactor ) return _gl.DST_COLOR;\n\t\tif ( p === OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\n\t\tif ( p === SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2 ( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color.getHex(), this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( meta ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog ( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color.getHex(), this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( meta ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene () {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction LensFlare( texture, size, distance, blending, color ) {\n\n\tObject3D.call( this );\n\n\tthis.lensFlares = [];\n\n\tthis.positionScreen = new Vector3();\n\tthis.customUpdateCallback = undefined;\n\n\tif ( texture !== undefined ) {\n\n\t\tthis.add( texture, size, distance, blending, color );\n\n\t}\n\n}\n\nLensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LensFlare,\n\n\tisLensFlare: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.positionScreen.copy( source.positionScreen );\n\t\tthis.customUpdateCallback = source.customUpdateCallback;\n\n\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\n\n\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( texture, size, distance, blending, color, opacity ) {\n\n\t\tif ( size === undefined ) size = - 1;\n\t\tif ( distance === undefined ) distance = 0;\n\t\tif ( opacity === undefined ) opacity = 1;\n\t\tif ( color === undefined ) color = new Color( 0xffffff );\n\t\tif ( blending === undefined ) blending = NormalBlending;\n\n\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\n\t\tthis.lensFlares.push( {\n\t\t\ttexture: texture,\t// THREE.Texture\n\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\n\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\n\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\n\t\t\tscale: 1, \t\t// scale\n\t\t\trotation: 0, \t\t// rotation\n\t\t\topacity: opacity,\t// opacity\n\t\t\tcolor: color,\t\t// color\n\t\t\tblending: blending\t// blending\n\t\t} );\n\n\t},\n\n\t/*\n\t * Update lens flares update positions on all flares based on the screen position\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n\t */\n\n\tupdateLensFlares: function () {\n\n\t\tvar f, fl = this.lensFlares.length;\n\t\tvar flare;\n\t\tvar vecX = - this.positionScreen.x * 2;\n\t\tvar vecY = - this.positionScreen.y * 2;\n\n\t\tfor ( f = 0; f < fl; f ++ ) {\n\n\t\t\tflare = this.lensFlares[ f ];\n\n\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\n\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2()\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldPosition = new Vector3();\n\t\tvar worldScale = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldPosition.setFromMatrixPosition( this.matrixWorld );\n\t\t\traycaster.ray.closestPointToPoint( worldPosition, intersectPoint );\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tvar guessSizeSq = worldScale.x * worldScale.y / 4;\n\n\t\t\tif ( worldPosition.distanceToSquared( intersectPoint ) > guessSizeSq ) return;\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n\tvar bones = this.initBones();\n\tvar skeleton = new Skeleton( bones );\n\n\tthis.bind( skeleton, this.matrixWorld );\n\n\tthis.normalizeSkinWeights();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tinitBones: function () {\n\n\t\tvar bones = [], bone, gbone;\n\t\tvar i, il;\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone();\n\t\t\t\tbones.push( bone );\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn bones;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar scale, i;\n\n\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tscale = 1.0 / sw.lengthManhattan();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\tvar vec = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tscale = 1.0 / vec.lengthManhattan();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\treturn new LineSegments( geometry, material );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\t\t\tvar precisionSq = precision * precision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = (this && this.isLineSegments) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n\tvar scope = this;\n\n\tfunction update() {\n\n\t\trequestAnimationFrame( update );\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tscope.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tupdate();\n\n}\n\nVideoTexture.prototype = Object.create( Texture.prototype );\nVideoTexture.prototype.constructor = VideoTexture;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' )\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tp0 = func( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tp1 = func( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tp1 = func( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tp1 = func( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tp1 = func( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n \tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n\t];\n\n\tvar indices = [\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,    - 1, - 1,  1,\n\t\t- 1,  1, - 1,    - 1,  1,  1,\n\t\t  1, - 1, - 1,     1, - 1,  1,\n\t\t  1,  1, - 1,     1,  1,  1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t,     0, - r,  t,\n\t\t 0,  r, - t,     0,  r,  t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t,  0,    - r,  t,  0,\n\t\t r, - t,  0,     r,  t,  0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t,  0, - r,     t,  0, - r,\n\t\t- t,  0,  r,     t,  0,  r\n\t];\n\n\tvar indices = [\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tvar P = path.getPointAt( i / tubularSegments );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin =   Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 100;\n\ttube = tube || 40;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 100;\n\ttube = tube || 40;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\ttriangulate: ( function () {\n\n\t\t/**\n\t\t * This code is a quick port of code written in C++ which was submitted to\n\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n\t\t * See original code and more information here:\n\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\t\t *\n\t\t * ported to actionscript by Zevan Rosser\n\t\t * www.actionsnippet.com\n\t\t *\n\t\t * ported to javascript by Joshua Koo\n\t\t * http://www.lab4games.net/zz85/blog\n\t\t *\n\t\t */\n\n\t\tfunction snip( contour, u, v, w, n, verts ) {\n\n\t\t\tvar p;\n\t\t\tvar ax, ay, bx, by;\n\t\t\tvar cx, cy, px, py;\n\n\t\t\tax = contour[ verts[ u ] ].x;\n\t\t\tay = contour[ verts[ u ] ].y;\n\n\t\t\tbx = contour[ verts[ v ] ].x;\n\t\t\tby = contour[ verts[ v ] ].y;\n\n\t\t\tcx = contour[ verts[ w ] ].x;\n\t\t\tcy = contour[ verts[ w ] ].y;\n\n\t\t\tif ( ( bx - ax ) * ( cy - ay ) - ( by - ay ) * ( cx - ax ) <= 0 ) return false;\n\n\t\t\tvar aX, aY, bX, bY, cX, cY;\n\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\n\t\t\taX = cx - bx;  aY = cy - by;\n\t\t\tbX = ax - cx;  bY = ay - cy;\n\t\t\tcX = bx - ax;  cY = by - ay;\n\n\t\t\tfor ( p = 0; p < n; p ++ ) {\n\n\t\t\t\tpx = contour[ verts[ p ] ].x;\n\t\t\t\tpy = contour[ verts[ p ] ].y;\n\n\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\n\t\t\t\tapx = px - ax;  apy = py - ay;\n\t\t\t\tbpx = px - bx;  bpy = py - by;\n\t\t\t\tcpx = px - cx;  cpy = py - cy;\n\n\t\t\t\t// see if p is inside triangle abc\n\n\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\n\t\t\t\tcCROSSap = cX * apy - cY * apx;\n\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\n\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// takes in an contour array and returns\n\n\t\treturn function triangulate( contour, indices ) {\n\n\t\t\tvar n = contour.length;\n\n\t\t\tif ( n < 3 ) return null;\n\n\t\t\tvar result = [],\n\t\t\t\tverts = [],\n\t\t\t\tvertIndices = [];\n\n\t\t\t/* we want a counter-clockwise polygon in verts */\n\n\t\t\tvar u, v, w;\n\n\t\t\tif ( ShapeUtils.area( contour ) > 0.0 ) {\n\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n\t\t\t} else {\n\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n\t\t\t}\n\n\t\t\tvar nv = n;\n\n\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\n\t\t\tvar count = 2 * nv;   /* error detection */\n\n\t\t\tfor ( v = nv - 1; nv > 2; ) {\n\n\t\t\t\t/* if we loop, it is probably a non-simple polygon */\n\n\t\t\t\tif ( ( count -- ) <= 0 ) {\n\n\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\n\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n\t\t\t\t\t//return null;\n\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\n\n\t\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\t\treturn result;\n\n\t\t\t\t}\n\n\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\n\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\n\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\n\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\n\t\t\t\t\tvar a, b, c, s, t;\n\n\t\t\t\t\t/* true names of the vertices */\n\n\t\t\t\t\ta = verts[ u ];\n\t\t\t\t\tb = verts[ v ];\n\t\t\t\t\tc = verts[ w ];\n\n\t\t\t\t\t/* output Triangle */\n\n\t\t\t\t\tresult.push( [ contour[ a ],\n\t\t\t\t\t\tcontour[ b ],\n\t\t\t\t\t\tcontour[ c ] ] );\n\n\n\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n\t\t\t\t\t/* remove v from the remaining polygon */\n\n\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\n\n\t\t\t\t\t\tverts[ s ] = verts[ t ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnv --;\n\n\t\t\t\t\t/* reset error detection counter */\n\n\t\t\t\t\tcount = 2 * nv;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( indices ) return vertIndices;\n\t\t\treturn result;\n\n\t\t}\n\n\t} )(),\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tfunction removeDupEndPts(points) {\n\n\t\t\tvar l = points.length;\n\n\t\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t\tremoveDupEndPts( contour );\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\n\t\t\t// inOtherPt needs to be collinear to the inSegment\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\n\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\n\n\t\t\t\t// not parallel\n\n\t\t\t\tvar perpSeg2;\n\t\t\t\tif ( limit > 0 ) {\n\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\n\t\t\t\t}\n\n\t\t\t\t// i.e. to reduce rounding errors\n\t\t\t\t// intersection at endpoint of segment#1?\n\t\t\t\tif ( perpSeg2 === 0 ) {\n\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t}\n\t\t\t\tif ( perpSeg2 === limit ) {\n\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\treturn [ inSeg1Pt2 ];\n\n\t\t\t\t}\n\t\t\t\t// intersection at endpoint of segment#2?\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\n\n\t\t\t\t// return real intersection point\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n\t\t\t} else {\n\n\t\t\t\t// parallel or collinear\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\n\t\t\t\t// they are collinear or degenerate\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\n\t\t\t\t// both segments are points\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\n\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\n\n\t\t\t\t}\n\t\t\t\t// segment#1  is a single point\n\t\t\t\tif ( seg1Pt ) {\n\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t}\n\t\t\t\t// segment#2  is a single point\n\t\t\t\tif ( seg2Pt ) {\n\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n\t\t\t\t\treturn [ inSeg2Pt1 ];\n\n\t\t\t\t}\n\n\t\t\t\t// they are collinear segments, which might overlap\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n\t\t\t\tif ( seg1dx !== 0 ) {\n\n\t\t\t\t\t// the segments are NOT on a vertical line\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// the segments are on a vertical line\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\n\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\treturn [ seg2min ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\n\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\treturn [ seg1min ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\n\t\t\t// The order of legs is important\n\n\t\t\t// translation of all points, so that Vertex is at (0,0)\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\n\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\n\n\t\t\t\t// angle != 180 deg.\n\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n\t\t\t\tif ( from2toAngle > 0 ) {\n\n\t\t\t\t\t// main angle < 180 deg.\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// main angle > 180 deg.\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// angle == 180 deg.\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n\t\t\t\treturn\t( from2otherAngle > 0 );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tfunction removeHoles( contour, holes ) {\n\n\t\t\tvar shape = contour.concat(); // work on this shape\n\t\t\tvar hole;\n\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\n\t\t\t\t// Check if hole point lies within angle around shape point\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\n\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\n\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\t// Check if shape point lies within angle around hole point\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\n\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\n\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\treturn\ttrue;\n\n\t\t\t}\n\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t// checks for intersections with shape edges\n\t\t\t\tvar sIdx, nextIdx, intersection;\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t}\n\n\t\t\t\treturn\tfalse;\n\n\t\t\t}\n\n\t\t\tvar indepHoles = [];\n\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t// checks for intersections with hole edges\n\t\t\t\tvar ihIdx, chkHole,\n\t\t\t\t\thIdx, nextIdx, intersection;\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\treturn\tfalse;\n\n\t\t\t}\n\n\t\t\tvar holeIndex, shapeIndex,\n\t\t\t\tshapePt, holePt,\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\n\t\t\t\ttmpShape1, tmpShape2,\n\t\t\t\ttmpHole1, tmpHole2;\n\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tindepHoles.push( h );\n\n\t\t\t}\n\n\t\t\tvar minShapeIndex = 0;\n\t\t\tvar counter = indepHoles.length * 2;\n\t\t\twhile ( indepHoles.length > 0 ) {\n\n\t\t\t\tcounter --;\n\t\t\t\tif ( counter < 0 ) {\n\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// search for shape-vertex and hole-vertex,\n\t\t\t\t// which can be connected without intersections\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\n\t\t\t\t\tholeIndex\t= - 1;\n\n\t\t\t\t\t// search for hole which can be reached without intersections\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\n\n\t\t\t\t\t\t// prevent multiple checks\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\n\n\t\t\t\t\t\thole = holes[ holeIdx ];\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\n\t\t\t\t\t\t\tholeIndex = h2;\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\n\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\n\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn shape; \t\t\t/* shape with no holes */\n\n\t\t}\n\n\n\t\tvar i, il, f, face,\n\t\t\tkey, index,\n\t\t\tallPointsMap = {};\n\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n\t\tvar allpoints = contour.concat();\n\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\n\n\t\t}\n\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\n\t\t// prepare all points map\n\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\n\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.ShapeUtils: Duplicate point\", key, i );\n\n\t\t\t}\n\n\t\t\tallPointsMap[ key ] = i;\n\n\t\t}\n\n\t\t// remove holes by cutting paths to holes and adding them to the shape\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\n\t\tvar triangles = ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n\t\t//console.log( \"triangles\",triangles, triangles.length );\n\n\t\t// check all face vertices against all points map\n\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n\t\t\tface = triangles[ i ];\n\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\n\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\n\n\t\t\t\tindex = allPointsMap[ key ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tface[ f ] = index;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn triangles.concat();\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  amount: <int>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *  frames: <Object> // containing arrays of tangents, normals, binormals\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tif ( typeof ( shapes ) === \"undefined\" ) {\n\n\t\treturn;\n\n\t}\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tthis.addShapeList( shapes, options );\n\n\tthis.computeVertexNormals();\n\n\t// can't really use automatic vertex normals\n\t// as then front and back sides get smoothed too\n\t// should do separate smoothing just for sides\n\n\t//this.computeVertexNormals();\n\n\t//console.log( \"took\", ( Date.now() - startTime ) );\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.getArrays = function () {\n\n\tvar positionAttribute = this.getAttribute( \"position\" );\n\tvar verticesArray = positionAttribute ? Array.prototype.slice.call( positionAttribute.array ) : [];\n\n\tvar uvAttribute = this.getAttribute( \"uv\" );\n\tvar uvArray = uvAttribute ? Array.prototype.slice.call( uvAttribute.array ) : [];\n\n\tvar IndexAttribute = this.index;\n\tvar indicesArray = IndexAttribute ? Array.prototype.slice.call( IndexAttribute.array ) : [];\n\n\treturn {\n\t\tposition: verticesArray,\n\t\tuv: uvArray,\n\t\tindex: indicesArray\n\t};\n\n};\n\nExtrudeBufferGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\tvar sl = shapes.length;\n\toptions.arrays = this.getArrays();\n\n\tfor ( var s = 0; s < sl; s ++ ) {\n\n\t\tvar shape = shapes[ s ];\n\t\tthis.addShape( shape, options );\n\n\t}\n\n\tthis.setIndex( options.arrays.index );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( options.arrays.position, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\n};\n\nExtrudeBufferGeometry.prototype.addShape = function ( shape, options ) {\n\n\tvar arrays = options.arrays ? options.arrays : this.getArrays();\n\tvar verticesArray = arrays.position;\n\tvar indicesArray = arrays.index;\n\tvar uvArray = arrays.uv;\n\n\tvar placeholder = [];\n\n\n\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\tvar steps = options.steps !== undefined ? options.steps : 1;\n\n\tvar extrudePath = options.extrudePath;\n\tvar extrudePts, extrudeByPath = false;\n\n\t// Use default WorldUVGenerator if no UV generators are specified.\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n\n\tvar splineTube, binormal, normal, position2;\n\tif ( extrudePath ) {\n\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\textrudeByPath = true;\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t// SETUP TNB variables\n\n\t\t// TODO1 - have a .isClosed in spline?\n\n\t\tsplineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames( steps, false );\n\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\tbinormal = new Vector3();\n\t\tnormal = new Vector3();\n\t\tposition2 = new Vector3();\n\n\t}\n\n\t// Safeguards if bevels are not enabled\n\n\tif ( ! bevelEnabled ) {\n\n\t\tbevelSegments = 0;\n\t\tbevelThickness = 0;\n\t\tbevelSize = 0;\n\n\t}\n\n\t// Variables initialization\n\n\tvar ahole, h, hl; // looping of holes\n\tvar scope = this;\n\n\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\tvar vertices = shapePoints.shape;\n\tvar holes = shapePoints.holes;\n\n\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\tif ( reverse ) {\n\n\t\tvertices = vertices.reverse();\n\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t/* Vertices */\n\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\tahole = holes[ h ];\n\n\t\tvertices = vertices.concat( ahole );\n\n\t}\n\n\n\tfunction scalePt2( pt, vec, size ) {\n\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t}\n\n\tvar b, bs, t, z,\n\t\tvert, vlen = vertices.length,\n\t\tface, flen = faces.length;\n\n\n\t// Find directions for point movement\n\n\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t//\n\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t// check for collinear edges\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t// not collinear\n\n\t\t\t// length of vectors for normalizing\n\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t// vector from inPt to intersection point\n\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t//  but prevent crazy spikes\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t} else {\n\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// handle special case of collinear edges\n\n\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( direction_eq ) {\n\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t} else {\n\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t}\n\n\n\tvar contourMovements = [];\n\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\tif ( j === il ) j = 0;\n\t\tif ( k === il ) k = 0;\n\n\t\t//  (j)---(i)---(k)\n\t\t// console.log('i,j,k', i, j , k)\n\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t}\n\n\tvar holesMovements = [],\n\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\tahole = holes[ h ];\n\n\t\toneHoleMovements = [];\n\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t}\n\n\t\tholesMovements.push( oneHoleMovements );\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t}\n\n\n\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\tt = b / bevelSegments;\n\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t// contract shape\n\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\tv( vert.x, vert.y, - z );\n\n\t\t}\n\n\t\t// expand holes\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbs = bevelSize;\n\n\t// Back facing vertices\n\n\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\tif ( ! extrudeByPath ) {\n\n\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t} else {\n\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t}\n\n\t}\n\n\t// Add stepped vertices...\n\t// Including front facing vertices\n\n\tvar s;\n\n\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\t// Add bevel segments planes\n\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\tt = b / bevelSegments;\n\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t// contract shape\n\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t}\n\n\t\t// expand holes\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/* Faces */\n\n\t// Top and bottom faces\n\n\tbuildLidFaces();\n\n\t// Sides faces\n\n\tbuildSideFaces();\n\n\n\t/////  Internal functions\n\n\tfunction buildLidFaces() {\n\n\t\tvar start = verticesArray.length/3;\n\n\t\tif ( bevelEnabled ) {\n\n\t\t\tvar layer = 0; // steps + 1\n\t\t\tvar offset = vlen * layer;\n\n\t\t\t// Bottom faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t}\n\n\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\toffset = vlen * layer;\n\n\t\t\t// Top faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Bottom faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t}\n\n\t\t\t// Top faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.addGroup( start, verticesArray.length/3 -start, options.material !== undefined ? options.material : 0);\n\n\t}\n\n\t// Create faces for the z-sides of the shape\n\n\tfunction buildSideFaces() {\n\n\t\tvar start = verticesArray.length/3;\n\t\tvar layeroffset = 0;\n\t\tsidewalls( contour, layeroffset );\n\t\tlayeroffset += contour.length;\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t//, true\n\t\t\tlayeroffset += ahole.length;\n\n\t\t}\n\n\n\t\tscope.addGroup( start, verticesArray.length/3 -start, options.extrudeMaterial !== undefined ? options.extrudeMaterial : 1);\n\n\n\t}\n\n\tfunction sidewalls( contour, layeroffset ) {\n\n\t\tvar j, k;\n\t\ti = contour.length;\n\n\t\twhile ( -- i >= 0 ) {\n\n\t\t\tj = i;\n\t\t\tk = i - 1;\n\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\tvar s = 0,\n\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction v( x, y, z ) {\n\n\t\tplaceholder.push( x );\n\t\tplaceholder.push( y );\n\t\tplaceholder.push( z );\n\n\t}\n\n\n\tfunction f3( a, b, c ) {\n\n\t\taddVertex( a );\n\t\taddVertex( b );\n\t\taddVertex( c );\n\n\t\tvar nextIndex = verticesArray.length / 3;\n\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\taddUV( uvs[ 0 ] );\n\t\taddUV( uvs[ 1 ] );\n\t\taddUV( uvs[ 2 ] );\n\n\t}\n\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\n\t\taddVertex( a );\n\t\taddVertex( b );\n\t\taddVertex( d );\n\n\t\taddVertex( b );\n\t\taddVertex( c );\n\t\taddVertex( d );\n\n\n\t\tvar nextIndex = verticesArray.length / 3;\n\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\taddUV( uvs[ 0 ] );\n\t\taddUV( uvs[ 1 ] );\n\t\taddUV( uvs[ 3 ] );\n\n\t\taddUV( uvs[ 1 ] );\n\t\taddUV( uvs[ 2 ] );\n\t\taddUV( uvs[ 3 ] );\n\n\t}\n\n\tfunction addVertex( index ) {\n\n\t\tindicesArray.push( verticesArray.length / 3 );\n\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t}\n\n\n\tfunction addUV( vector2 ) {\n\n\t\tuvArray.push( vector2.x );\n\t\tuvArray.push( vector2.y );\n\n\t}\n\n\tif ( ! options.arrays ) {\n\n\t\tthis.setIndex( indicesArray );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\n\t}\n\n};\n\nExtrudeGeometry.WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry(  text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 50;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 20;\n\touterRadius = outerRadius || 50;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n\theight = height !== undefined ? height : 100;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 50;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  opacity: <float>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tShaderMaterial.call( this, {\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\t\tvertexShader: ShaderChunk[ 'shadow_vert' ],\n\t\tfragmentShader: ShaderChunk[ 'shadow_frag' ]\n\t} );\n\n\tthis.lights = true;\n\tthis.transparent = true;\n\n\tObject.defineProperties( this, {\n\t\topacity: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn this.uniforms.opacity.value;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tthis.uniforms.opacity.value = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( ShaderMaterial.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( Material.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t \tresponse = new ArrayBuffer( data.length );\n\n\t\t\t\t\t\tvar view = new Uint8Array( response );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ response ], { type: mimeType } );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar request = new XMLHttpRequest();\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = event.target.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\tif ( onProgress !== undefined ) {\n\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\tonProgress( event );\n\n\t\t\t\t}, false );\n\n\t\t\t}\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\timage.addEventListener( 'load', function () {\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}, false );\n\n\t\t/*\n\t\timage.addEventListener( 'progress', function ( event ) {\n\n\t\t\tif ( onProgress ) onProgress( event );\n\n\t\t}, false );\n\t\t*/\n\n\t\timage.addEventListener( 'error', function ( event ) {\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t}, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar texture = new Texture();\n\t\ttexture.image = loader.load( url, function () {\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\treturn this.intensity * Math.PI;\n\t\t},\n\t\tset: function ( power ) {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.position.set( 0, 1, 0 );\n\tthis.updateMatrix();\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n\t// TODO (abelnation): distance/decay\n\n\t// TODO (abelnation): update method for RectAreaLight to update transform to lookat target\n\n\t// TODO (abelnation): shadows\n\n}\n\n// TODO (abelnation): RectAreaLight update when light shape is changed\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[   i1   ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[   i1   ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\tthrow new Error( \"call to abstract method\" );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call(\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = -0;\n\tthis._offsetPrev = -0;\n\tthis._weightNext = -0;\n\tthis._offsetNext = -0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: \tZeroCurvatureEnding,\n\t\tendingEnd:\t\tZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\n\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\n\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\n\t\tvar sN =       wN   * ppp   -           wN      * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\nvar KeyframeTrackPrototype;\n\nKeyframeTrackPrototype = {\n\n\tTimeBufferType: Float32Array,\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant(\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant(\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant(\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrackPrototype:', message );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) -- to;\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.\n\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else keep = true;\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j )\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n};\n\nfunction KeyframeTrackConstructor( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( \"track name is undefined\" );\n\n\tif ( times === undefined || times.length === 0 ) {\n\n\t\tthrow new Error( \"no keyframes in track named \" + name );\n\n\t}\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\tthis.validate();\n\tthis.optimize();\n\n}\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0,\n\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\treturn new QuaternionLinearInterpolant(\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.apply( this, arguments );\n\n}\n\nKeyframeTrack.prototype = KeyframeTrackPrototype;\nKeyframeTrackPrototype.constructor = KeyframeTrack;\n\n// Static methods:\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tparse: function( json ) {\n\n\t\tif( json.type === undefined ) {\n\n\t\t\tthrow new Error( \"track type undefined, can not parse\" );\n\n\t\t}\n\n\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we asssume a constructor compatible with the base\n\t\t\treturn new trackType(\n\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t},\n\n\t_getTrackTypeForValueTypeName: function( typeName ) {\n\n\t\tswitch( typeName.toLowerCase() ) {\n\n\t\t\tcase \"scalar\":\n\t\t\tcase \"double\":\n\t\t\tcase \"float\":\n\t\t\tcase \"number\":\n\t\t\tcase \"integer\":\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase \"vector\":\n\t\t\tcase \"vector2\":\n\t\t\tcase \"vector3\":\n\t\t\tcase \"vector4\":\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase \"color\":\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase \"quaternion\":\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase \"bool\":\n\t\t\tcase \"boolean\":\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase \"string\":\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\n\n\t}\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n\tthis.optimize();\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\ti,\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\ttimes, values\n\t\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {\n\n\tthis.onLoadStart = function () {};\n\tthis.onLoadProgress = function () {};\n\tthis.onLoadComplete = function () {};\n\n}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: undefined,\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar parts = url.split( '/' );\n\n\t\tif ( parts.length === 1 ) return './';\n\n\t\tparts.pop();\n\n\t\treturn parts.join( '/' ) + '/';\n\n\t},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = [ value, value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\n\t},\n\n\tparse: ( function () {\n\n\t\tfunction parseModel( json, geometry ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tscale = json.scale,\n\n\t\t\t\tnUvLayers = 0;\n\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\tvar scale = json.scale;\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\treturn function ( json, texturePath ) {\n\n\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t// Geometry 4.0 spec\n\t\t\t\tjson = json.data;\n\n\t\t\t}\n\n\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t} else {\n\n\t\t\t\tjson.scale = 1.0;\n\n\t\t\t}\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tparseModel( json, geometry );\n\t\t\tparseSkin( json, geometry );\n\t\t\tparseMorphing( json, geometry );\n\t\t\tparseAnimations( json, geometry );\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.texturePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.texturePath === '' ) {\n\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar geometries = this.parseGeometries( json.geometries );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseGeometries: function ( json ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof( value ) === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture = new Texture( images[ data.image ] );\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function parseObject( data, geometries, materials ) {\n\n\t\t\tvar object;\n\n\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn geometries[ name ];\n\n\t\t\t}\n\n\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\n\t\t\t\t}\n\n\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn materials[ name ];\n\n\t\t\t}\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'Scene':\n\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\n\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\n\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\n\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\n\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\n\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\n\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tobject = new Object3D();\n\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\tmatrix.fromArray( data.matrix );\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t}\n\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\tif ( data.shadow ) {\n\n\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t\t}\n\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\tfor ( var child in data.children ) {\n\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\tvar levels = data.levels;\n\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t};\n\n\t}()\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint(t), getTangent(t)\n * .getPointAt(u), getTangentAt(u)\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n} );\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t ) {\n\n\tif ( t === 1 ) {\n\n\t\treturn this.v2.clone();\n\n\t}\n\n\tvar point = this.v2.clone().sub( this.v1 );\n\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u ) {\n\n\treturn this.getPoint( u );\n\n};\n\nLineCurve.prototype.getTangent = function ( t ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.curves = [];\n\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = (curve && curve.isEllipseCurve) ? divisions * 2\n\t\t\t\t: (curve && curve.isLineCurve) ? 1\n\t\t\t\t: (curve && curve.isSplineCurve) ? divisions * curve.points.length\n\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t/**************************************************************\n\t *\tCreate Geometries Helpers\n\t **************************************************************/\n\n\t/// Generate geometry from path points (for Line or Points objects)\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\t// Generate geometry from equidistant sampling along the path\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.aX = aX;\n\tthis.aY = aY;\n\n\tthis.xRadius = xRadius;\n\tthis.yRadius = yRadius;\n\n\tthis.aStartAngle = aStartAngle;\n\tthis.aEndAngle = aEndAngle;\n\n\tthis.aClockwise = aClockwise;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t ) {\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn new Vector2( x, y );\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.points = ( points === undefined ) ? [] : points;\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t ) {\n\n\tvar points = this.points;\n\tvar point = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( point );\n\tvar weight = point - intPoint;\n\n\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar point1 = points[ intPoint ];\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\treturn new Vector2(\n\t\tCatmullRom( weight, point0.x, point1.x, point2.x, point3.x ),\n\t\tCatmullRom( weight, point0.y, point1.y, point2.y, point3.y )\n\t);\n\n};\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\tthis.v3 = v3;\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.getPoint = function ( t ) {\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\treturn new Vector2(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\treturn new Vector2(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n};\n\nvar PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tfromPoints: function ( vectors ) {\n\n\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\n\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.fromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = PathPrototype;\nPathPrototype.constructor = Path;\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape() {\n\n\tPath.apply( this, arguments );\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( PathPrototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// Get points of shape and holes (keypoints based on segments parameter)\n\n\textractAllPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn this.extractAllPoints( divisions );\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Font( data ) {\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\tfunction createPaths( text ) {\n\n\t\t\tvar chars = String( text ).split( '' );\n\t\t\tvar scale = size / data.resolution;\n\t\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\t\t\tvar offsetX = 0, offsetY = 0;\n\n\t\t\tvar paths = [];\n\n\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\t\tvar char = chars[ i ];\n\n\t\t\t\tif ( char === '\\n' ) {\n\n\t\t\t\t\toffsetX = 0;\n\t\t\t\t\toffsetY -= line_height;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY );\n\t\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\t\tpaths.push( ret.path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn paths;\n\n\t\t}\n\n\t\tfunction createPath( c, scale, offsetX, offsetY ) {\n\n\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\n\n\t\t\tif ( ! glyph ) return;\n\n\t\t\tvar path = new ShapePath();\n\n\t\t\tvar pts = [];\n\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n\t\t\tif ( glyph.o ) {\n\n\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\tQuadraticBezier( t, cpx0, cpx1, cpx );\n\t\t\t\t\t\t\t\t\tQuadraticBezier( t, cpy0, cpy1, cpy );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\tCubicBezier( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\t\t\t\t\t\tCubicBezier( t, cpy0, cpy1, cpy2, cpy );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn { offsetX: glyph.ha * scale, path: path };\n\n\t\t}\n\n\t\t//\n\n\t\tif ( size === undefined ) size = 100;\n\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\tvar data = this.data;\n\n\t\tvar paths = createPaths( text );\n\t\tvar shapes = [];\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n} );\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar context = AudioContext.getContext();\n\n\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.updateCubeMap = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.value = value;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tsource.start( 0, this.startTime );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.startTime = this.context.currentTime;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.startTime = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\t\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.value = value;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: function ( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( /[^\\w-]/g, '' );\n\n\t},\n\n\tparseTrackName: function () {\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:[\\w-]+[\\/:])*)/;\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /([\\w-\\.]+)?/;\n\n\t\t// Object on target node, and accessor. Name may contain only word\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?/;\n\n\t\t// Property and accessor. May contain only word characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.([\\w-]+)(?:\\[(.+)\\])?/;\n\n\t\tvar trackRe = new RegExp(''\n\t\t\t+ '^'\n\t\t\t+ directoryRe.source\n\t\t\t+ nodeRe.source\n\t\t\t+ objectRe.source\n\t\t\t+ propertyRe.source\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function ( trackName ) {\n\n\t\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\t\tif ( ! matches ) {\n\n\t\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t\t}\n\n\t\t\t\tvar results = {\n\t\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\t\tpropertyName: matches[ 5 ],     // required\n\t\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t\t};\n\n\t\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\t\tif ( lastDot !== undefined && lastDot !== -1 ) {\n\n\t\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t\t// include '.' characters).\n\t\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== -1 ) {\n\n\t\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t\t}\n\n\t\t\t\treturn results;\n\n\t\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar searchSkeleton = function ( skeleton ) {\n\n\t\t\t\tfor ( var i = 0; i < skeleton.bones.length; i ++ ) {\n\n\t\t\t\t\tvar bone = skeleton.bones[ i ];\n\n\t\t\t\t\tif ( bone.name === nodeName ) {\n\n\t\t\t\t\t\treturn bone;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar bone = searchSkeleton( root.skeleton );\n\n\t\t\tif ( bone ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode(\n\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup( var_args ) {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() { return scope._objects.length; },\n\t\t\tget inUse() { return this.total - scope.nCachedObjects_; }\n\t\t},\n\n\t\tget bindingsPerObject() { return scope._bindings.length; }\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function( var_args ) {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ],\n\t\t\t\tknownObject = undefined;\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push(\n\t\t\t\t\t\t\tnew PropertyBinding(\n\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding(\n\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function( var_args ) {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function( var_args ) {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = -1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = -1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function() {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function() {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function() {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function() {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function() {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\n\t\tif ( deltaTime === 0 ) return time;\n\n\t\tvar duration = this._clip.duration,\n\n\t\t\tloop = this.loop,\n\t\t\tloopCount = this._loopCount;\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending < 0 ) {\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 0 ) {\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\n\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\n\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nObject.assign( AnimationMixer.prototype, EventDispatcher.prototype, {\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() { return scope._actions.length; },\n\t\t\t\tget inUse() { return scope._nActiveActions; }\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() { return scope._bindings.length; },\n\t\t\t\tget inUse() { return scope._nActiveBindings; }\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() { return scope._controlInterpolants.length; },\n\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.onUploadCallback = function () {};\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\tBufferAttribute.call( this, array, itemSize );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive ) {\n\n\t\tvar intersects = [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive ) {\n\n\t\tvar intersects = [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function() {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function( vec3 ) {\n\n\t\tthis.radius = vec3.length();\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function( vec3 ) {\n\n\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\tthis.y = vec3.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nfunction MorphBlendMesh( geometry, material ) {\n\r\n\tMesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n}\r\n\r\nMorphBlendMesh.prototype = Object.create( Mesh.prototype );\r\nMorphBlendMesh.prototype.constructor = MorphBlendMesh;\r\n\r\nMorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstart: start,\r\n\t\tend: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nMorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/i;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nMorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nMorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nMorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nMorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nMorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nMorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nMorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nMorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nMorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nMorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nMorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.start + _Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( renderCallback ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction SpotLightHelper( light ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0,   0,   0,   1,\n\t\t0, 0, 0,   1,   0,   1,\n\t\t0, 0, 0, - 1,   0,   1,\n\t\t0, 0, 0,   0,   1,   1,\n\t\t0, 0, 0,   0, - 1,   1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\tvar vector2 = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tthis.cone.material.color.copy( this.light.color );\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.onBeforeRender();\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.onBeforeRender = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function onBeforeRender() {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tmaterial.color.copy( this.light.color );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tthis.material.color.copy( this.light.color );\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tvar material = new LineBasicMaterial( { color: light.color } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.add( new Line( geometry, material ) );\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\tvar line = this.children[ 0 ];\n\n\t// update material\n\n\tline.material.color.copy( this.light.color );\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[  0 ] =   hx; array[  1 ] = - hy; array[  2 ] = 0;\n\tarray[  3 ] =   hx; array[  4 ] =   hy; array[  5 ] = 0;\n\tarray[  6 ] = - hx; array[  7 ] =   hy; array[  8 ] = 0;\n\tarray[  9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] =   hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tvar material = new MeshBasicMaterial( { vertexColors: VertexColors, wireframe: true } );\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\tcolor1.copy( this.light.color );\n\t\tcolor2.copy( this.light.groundColor );\n\n\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t\tcolors.needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size,   size, 0,\n\t\t  size,   size, 0,\n\t\t  size, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size,   size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.add( new Line( geometry, material ) );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.add( new Line( geometry, material ));\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tvar lightPlane = this.children[ 0 ];\n\tvar targetLine = this.children[ 1 ];\n\n\tlightPlane.geometry.dispose();\n\tlightPlane.material.dispose();\n\ttargetLine.geometry.dispose();\n\ttargetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tvar lightPlane = this.children[ 0 ];\n\t\tvar targetLine = this.children[ 1 ];\n\n\t\tlightPlane.lookAt( v3 );\n\t\tlightPlane.material.color.copy( this.light.color );\n\n\t\ttargetLine.lookAt( v3 );\n\t\ttargetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( \"n1\", \"n2\", colorFrustum );\n\taddLine( \"n2\", \"n4\", colorFrustum );\n\taddLine( \"n4\", \"n3\", colorFrustum );\n\taddLine( \"n3\", \"n1\", colorFrustum );\n\n\t// far\n\n\taddLine( \"f1\", \"f2\", colorFrustum );\n\taddLine( \"f2\", \"f4\", colorFrustum );\n\taddLine( \"f4\", \"f3\", colorFrustum );\n\taddLine( \"f3\", \"f1\", colorFrustum );\n\n\t// sides\n\n\taddLine( \"n1\", \"f1\", colorFrustum );\n\taddLine( \"n2\", \"f2\", colorFrustum );\n\taddLine( \"n3\", \"f3\", colorFrustum );\n\taddLine( \"n4\", \"f4\", colorFrustum );\n\n\t// cone\n\n\taddLine( \"p\", \"n1\", colorCone );\n\taddLine( \"p\", \"n2\", colorCone );\n\taddLine( \"p\", \"n3\", colorCone );\n\taddLine( \"p\", \"n4\", colorCone );\n\n\t// up\n\n\taddLine( \"u1\", \"u2\", colorUp );\n\taddLine( \"u2\", \"u3\", colorUp );\n\taddLine( \"u3\", \"u1\", colorUp );\n\n\t// target\n\n\taddLine( \"c\", \"t\", colorTarget );\n\taddLine( \"p\", \"c\", colorCross );\n\n\t// cross\n\n\taddLine( \"cn1\", \"cn2\", colorCross );\n\taddLine( \"cn3\", \"cn4\", colorCross );\n\n\taddLine( \"cf1\", \"cf2\", colorCross );\n\taddLine( \"cf3\", \"cf4\", colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( \"c\", 0, 0, - 1 );\n\t\tsetPoint( \"t\", 0, 0,  1 );\n\n\t\t// near\n\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( \"f1\", - w, - h, 1 );\n\t\tsetPoint( \"f2\",   w, - h, 1 );\n\t\tsetPoint( \"f3\", - w,   h, 1 );\n\t\tsetPoint( \"f4\",   w,   h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\n\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\n\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\n\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\n\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry;\nvar coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( length === undefined ) length = 1;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxisHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,  size, 0, 0,\n\t\t0, 0, 0,  0, size, 0,\n\t\t0, 0, 0,  0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,  1, 0.6, 0,\n\t\t0, 1, 0,  0.6, 1, 0,\n\t\t0, 0, 1,  0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxisHelper.prototype = Object.create( LineSegments.prototype );\nAxisHelper.prototype.constructor = AxisHelper;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly();\nvar py = new CubicPoly();\nvar pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points ) {\n\n\tCurve.call( this );\n\n\tif ( points.length < 2 ) console.warn( 'THREE.CatmullRomCurve3: Points array needs at least two entries.' );\n\n\tthis.points = points || [];\n\tthis.closed = false;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.getPoint = function ( t ) {\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar point = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( point );\n\tvar weight = point - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.type === 'catmullrom' ) {\n\n\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\n\n\t}\n\n\treturn new Vector3( px.calc( weight ), py.calc( weight ), pz.calc( weight ) );\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\tthis.v3 = v3;\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.getPoint = function ( t ) {\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\treturn new Vector3(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t ) {\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\treturn new Vector3(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.getPoint = function ( t ) {\n\n\tif ( t === 1 ) {\n\n\t\treturn this.v2.clone();\n\n\t}\n\n\tvar vector = new Vector3();\n\n\tvector.subVectors( this.v2, this.v1 ); // diff\n\tvector.multiplyScalar( t );\n\tvector.add( this.v1 );\n\n\treturn vector;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\n\n\t\tvar group = new Group();\n\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\tgroup.add( new Mesh( geometry, materials[ i ] ) );\n\n\t\t}\n\n\t\treturn group;\n\n\t},\n\n\tdetach: function ( child, parent, scene ) {\n\n\t\tchild.applyMatrix( parent.matrixWorld );\n\t\tparent.remove( child );\n\t\tscene.add( child );\n\n\t},\n\n\tattach: function ( child, scene, parent ) {\n\n\t\tchild.applyMatrix( new Matrix4().getInverse( parent.matrixWorld ) );\n\n\t\tscene.remove( child );\n\t\tparent.add( child );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( a ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( optionalTarget ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( samplingCoef ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\t\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\n_Math.random16 = function () {\n\n\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\n\treturn Math.random();\n\n};\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( a ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.'  );\n\n\t},\n\tapplyToBuffer: function( buffer, offset, length ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function( array, offset, length ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( a ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.'  );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function( buffer, offset, length ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function( array, offset, length ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.error( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.error( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.error( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t}\n\n} );\n\n//\n\nGeometry.prototype.computeTangents = function () {\n\n\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n};\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.cullFace;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\n\t\t\tthis.shadowMap.cullFace = value;\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\treturn this.renderReverseSided ? CullFaceFront : CullFaceBack;\n\n\t\t},\n\t\tset: function ( cullFace ) {\n\n\t\t\tvar value = ( cullFace !== CullFaceBack );\n\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\n\t\t\tthis.renderReverseSided = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nvar ImageUtils = {\n\n\tcrossOrigin: undefined,\n\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadCompressedTexture: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t},\n\n\tloadCompressedTextureCube: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t}\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tthis.clear = function () {};\n\tthis.render = function () {};\n\tthis.setClearColor = function () {};\n\tthis.setSize = function () {};\n\n}\n\nexport { WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, LensFlare, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, JSONLoader, ImageLoader, FontLoader, FileLoader, Loader, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, GeometryIdCount, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, MorphBlendMesh, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, ArrowHelper, AxisHelper, CatmullRomCurve3, CubicBezierCurve3, QuadraticBezierCurve3, LineCurve3, ArcCurve, EllipseCurve, SplineCurve, CubicBezierCurve, QuadraticBezierCurve, LineCurve, Shape, Path, ShapePath, Font, CurvePath, Curve, ShapeUtils, SceneUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshBasicMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, BoxGeometry as CubeGeometry, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, ImageUtils, Projector, CanvasRenderer };\n","import {Body, Bodies, Engine, World} from 'matter-js';\r\n\r\nimport {\r\n  // TODO Clean out unused.\r\n  AmbientLight, BoxGeometry, BufferAttribute, BufferGeometry, DirectionalLight,\r\n  Geometry, Line, LineBasicMaterial, Mesh, MeshBasicMaterial,\r\n  MeshPhysicalMaterial, PerspectiveCamera, PlaneBufferGeometry, Scene,\r\n  ShaderMaterial, Vector2, Vector3, WebGLRenderer,\r\n} from 'three';\r\n\r\nexport class Game {\r\n\r\n  constructor(canvas: HTMLCanvasElement) {\r\n    // World.\r\n    let engine = this.engine = Engine.create();\r\n    let box1 = this.box1 = Bodies.rectangle(20, 20, 10, 10);\r\n    let box2 = this.box2 = Bodies.rectangle(13, 40, 8, 8);\r\n    let ground = Bodies.rectangle(0, -5, 1000, 10, {isStatic: true});\r\n    World.add(engine.world, [box1, box2, ground]);\r\n    console.log(engine.world.gravity);\r\n    engine.world.gravity.y = -1;\r\n    engine.world.gravity.scale = 1e-4;\r\n    // View.\r\n    this.canvas = canvas;\r\n    let renderer = this.renderer = new WebGLRenderer({canvas});\r\n    this.camera =\r\n      new PerspectiveCamera(75, canvas.width / canvas.height, 0.1, 1000);\r\n    this.camera.rotation.order = 'ZXY';\r\n    this.camera.position.set(10, 8, 0);\r\n    this.camera.up.set(0, 0, -1);\r\n    this.camera.lookAt(new Vector3());\r\n    this.camera.updateProjectionMatrix();\r\n    renderer.setSize(canvas.width, canvas.height);\r\n    // Resize handling after renderer and camera.\r\n    window.addEventListener('resize', () => this.resize());\r\n    this.resize();\r\n    // Scene.\r\n    let scene = this.scene = new Scene();\r\n    // Some needful lighting.\r\n    scene.add(new AmbientLight(0xFFFFFF));\r\n    let light = new DirectionalLight(0xFFFFFF);\r\n    light.position.set(-5, 5, 0);\r\n    scene.add(light);\r\n    scene.add(light.target);\r\n    // Sample scene.\r\n    let geo = new BoxGeometry(1, 1, 1);\r\n    let material = new MeshPhysicalMaterial({color: 0xFFBB33});\r\n    let cube = this.cube = new Mesh(geo, material);\r\n    cube.position.set(box1.position.x, box1.position.y, 0).multiplyScalar(0.1);\r\n    scene.add(cube);\r\n    let box2Mesh = this.box2Mesh = new Mesh(\r\n      new BoxGeometry(0.8, 0.8, 1), new MeshPhysicalMaterial({color:0xAA55AA}),\r\n    );\r\n    box2Mesh.position.set(\r\n      box2.position.x, box2.position.y, 0,\r\n    ).multiplyScalar(0.1);\r\n    scene.add(box2Mesh);\r\n    let floor = new Mesh(\r\n      new BoxGeometry(100, 1, 1), new MeshPhysicalMaterial({color: 0x00FF88}),\r\n    );\r\n    floor.position.y = -0.5;\r\n    scene.add(floor);\r\n    // Input.\r\n    window.addEventListener('keydown', event => this.onKey(event, true));\r\n    window.addEventListener('keyup', event => this.onKey(event, false));\r\n  }\r\n\r\n  box1: Body;\r\n\r\n  box2: Body;\r\n\r\n  box2Mesh: Mesh;\r\n\r\n  camera: PerspectiveCamera;\r\n\r\n  canvas: HTMLCanvasElement;\r\n\r\n  cube: Mesh;\r\n\r\n  engine: Engine;\r\n\r\n  onKey(event: KeyboardEvent, down: boolean) {\r\n    this.keys.set(event.key, down);\r\n  }\r\n\r\n  keys = new Map<string, boolean>();\r\n\r\n  renderer: WebGLRenderer;\r\n\r\n  resize() {\r\n    this.renderer.setSize(1, 1);\r\n    let canvas = this.renderer.domElement;\r\n    window.setTimeout(() => {\r\n      let canvas = this.renderer.domElement;\r\n      this.renderer.setSize(window.innerWidth, 1);\r\n      canvas.style.height = '100%';\r\n    }, 10);\r\n  }\r\n\r\n  scene: Scene;\r\n\r\n  start() {\r\n    this.step();\r\n  }\r\n\r\n  step = () => {\r\n    window.requestAnimationFrame(this.step);\r\n    Engine.update(this.engine);\r\n    this.cube.rotation.z = this.box1.angle;\r\n    this.cube.position.set(\r\n      this.box1.position.x, this.box1.position.y, 0,\r\n    ).multiplyScalar(0.1);\r\n    this.box2Mesh.rotation.z = this.box2.angle;\r\n    this.box2Mesh.position.set(\r\n      this.box2.position.x, this.box2.position.y, 0,\r\n    ).multiplyScalar(0.1);\r\n    velocity.set(0, 0);\r\n    if (this.keys.get('ArrowUp')) {\r\n      velocity.y = 1;\r\n    } else if (this.keys.get('ArrowDown')) {\r\n      velocity.y = -1;\r\n    }\r\n    if (this.keys.get('ArrowRight')) {\r\n      velocity.x = 1;\r\n    } else if (this.keys.get('ArrowLeft')) {\r\n      velocity.x = -1;\r\n    }\r\n    let speed = 0.2;\r\n    // this.camera.position.x += speed * velocity.x;\r\n    // this.camera.position.y += speed * velocity.y;\r\n    this.camera.rotation.z += 0.02 * velocity.x;\r\n    // this.camera.rotation.x = 0;\r\n    // this.camera.rotation.y = 0;\r\n    let direction = this.camera.getWorldDirection();\r\n    move.set(direction.x, direction.y).multiplyScalar(speed * velocity.y);\r\n    this.camera.position.x += move.x;\r\n    this.camera.position.y += move.y;\r\n    // if (velocity.x) {\r\n    //   console.log(this.camera.getWorldDirection());\r\n    // }\r\n    this.camera.updateProjectionMatrix();\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n}\r\n\r\nlet move = new Vector2();\r\nlet velocity = new Vector2();\r\n","declare global {\r\n  namespace JSX {\r\n    interface Element {}\r\n    interface ElementAttributesProperty {\r\n      props: {};\r\n    }\r\n    interface IntrinsicElements {\r\n      canvas: any;\r\n      div: any;\r\n    }\r\n  }\r\n}\r\n\r\nexport let React = {\r\n  createElement(type: Function | string, props: any, ...kids: any[]) {\r\n    console.log('createElement', type, props, kids);\r\n    if (typeof type == 'string') {\r\n      let element = document.createElement(type);\r\n      for (let key in props) {\r\n        element.setAttribute(key, props[key]);\r\n      }\r\n      let strings: Array<string> = [];\r\n      let appendText = () => {\r\n        if (strings.length) {\r\n          element.appendChild(document.createTextNode(strings.join('')));\r\n          strings.length = 0;\r\n        }\r\n      }\r\n      for (let kid of kids) {\r\n        if (typeof kid == 'string') {\r\n          strings.push(kid);\r\n        } else {\r\n          appendText();\r\n          element.appendChild(kid);\r\n        }\r\n      }\r\n      appendText();\r\n      return element;\r\n    } else {\r\n      return [type, props, kids];\r\n    }\r\n  }\r\n};\r\n","export function render(element: JSX.Element, root: Element) {\r\n  if (element instanceof Element) {\r\n    root.appendChild(element);\r\n  }\r\n}\r\n","export * from './game';\r\nexport * from './jsx';\r\nexport * from './ui';\r\n","import {Game, React, render} from './index';\r\n\r\nfunction init() {\r\n  // console.log('Hi!');\r\n  // let name = 'world';\r\n  // let clazz = 'that<>\"\"';\r\n  // console.log(<Hi name={name}><Hello>Inside!</Hello> More</Hi>);\r\n  // console.log();\r\n  // let hi = new Hello();\r\n  // hi.hi();\r\n  render(\r\n    <canvas\r\n      height=\"1\"\r\n      id=\"canvas\"\r\n      style=\"left: 0; position: absolute; top: 0\"\r\n      width=\"1\">\r\n    </canvas>,\r\n    window.document.body!\r\n  );\r\n  let game = new Game(\r\n    window.document.getElementById('canvas') as HTMLCanvasElement\r\n  );\r\n  game.start();\r\n}\r\n\r\ntype Props = {\r\n  age?: number;\r\n}\r\n\r\nclass Hello {\r\n  hi = () => console.log('Hi from', this);\r\n  props: Props & {\r\n    name?: string;\r\n  } = {};\r\n  render() {\r\n    console.log('render!');\r\n  }\r\n}\r\n\r\nclass Hi extends Hello {\r\n  props: Hello['props'] & {\r\n    color?: string;\r\n  } = {};\r\n}\r\n\r\n// const styles = {\r\n//   title: {\r\n//     color: '#ff4400',\r\n//     fontSize: 48,\r\n//     fontWeight: 'bold',\r\n//   }\r\n// };\r\n\r\nwindow.addEventListener('load', init);\r\n"]}